{"version":3,"sources":["common/fab.tsx","common/ocr-button.tsx","db.ts","recipe/recipe-hooks.tsx","routes-config.ts","recipe/recipe-form.tsx","recipe/recipe-page.tsx","list/list-hooks.tsx","list/list-form.tsx","list/list-page.tsx","settings/import-export.tsx","settings/settings-page.tsx","routes.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["fabStyles","makeStyles","theme","createStyles","fab","position","bottom","spacing","right","BottomRightFab","onClick","label","children","styles","Fab","className","color","aria-label","worker","createWorker","logger","m","console","log","initialState","status","text","image","reducer","state","action","type","payload","OcrButton","onComplete","React","useState","open","setOpen","useReducer","dispatch","imageRef","useRef","previewImage","file","reader","FileReader","onload","e","target","result","readAsDataURL","processImage","a","current","load","loadLanguage","initialize","recognize","data","Error","useOcr","useEffect","Button","CameraAlt","SwipeableDrawer","anchor","onClose","onOpen","Card","CardHeader","title","CardContent","onChange","files","style","maxWidth","ref","src","alt","CardActions","disabled","CircularProgress","db","listItems","recipes","version","stores","table","Dexie","getRecipeByName","where","equals","toArray","recipe","getPagedRecipes","offset","limit","addRecipe","add","updateRecipe","put","deleteRecipe","delete","bulkAddRecipes","bulkPut","addListItems","split","map","inBasket","recipeTitleCache","useRecipeByTitle","setStatus","fetchRecipe","retry","updateCache","RECIPES_PATH","BASE_PATH","LIST_PATH","validateRequired","value","undefined","addUpdateRecipe","isUpdate","RecipeForm","initialValues","onSubmit","Boolean","handleSubmit","submitting","invalid","form","autoComplete","reset","name","validate","props","TextField","margin","fullWidth","error","meta","touched","input","Box","mt","multiline","RecipeEditForm","navigate","useHistory","id","useParams","decodeURIComponent","Skeleton","height","push","getRecipeDetailPath","Delete","RecipeDetails","subheader","tags","Typography","gutterBottom","variant","component","whiteSpace","ingredients","mb","Divider","description","getRecipeDetailEditPath","Edit","RecipeList","setRecipes","hasMore","setHasMore","offsetRef","fetchRecipes","length","recipeListCache","count","useRecipes","List","ListItem","key","ListItemText","primary","secondary","ADD_RECIPE_PATH","Add","RecipePage","history","exact","path","render","RECIPE_DETAILS_PATH","listItemsCache","useListItems","list","setList","fetchList","async","ListForm","onCompleted","preventDefault","currentTarget","required","startIcon","Save","ClearListDialog","onClearList","handleClose","Dialog","aria-labelledby","DialogTitle","DialogActions","clear","autoFocus","ListPage","item","button","listItem","Checkbox","checked","inputProps","ImportRecipes","event","JSON","parse","readAsText","Snackbar","autoHideDuration","message","anchorOrigin","vertical","horizontal","ExportRecipes","href","updateHref","getData","encodeURIComponent","stringify","download","SettingsPage","useStyles","nav","marginTop","top","BottomNav","location","pathname","AppBar","BottomNavigation","showLabels","BottomNavigationAction","icon","FormatListBulleted","MenuBook","Settings","RootRoutes","from","to","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","palette","ThemeProvider","CssBaseline","Container","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.85794591.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Fab, Theme } from \"@material-ui/core\";\n\nconst fabStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      position: \"fixed\",\n      bottom: theme.spacing(8),\n\n      right: theme.spacing(2)\n    }\n  })\n);\n\nexport const BottomRightFab: React.FC<{\n  onClick: (e: any) => void;\n  label: string;\n}> = ({ onClick, label, children }) => {\n  const styles = fabStyles();\n  return (\n    <Fab\n      onClick={onClick}\n      className={styles.fab}\n      color=\"primary\"\n      aria-label={label}\n    >\n      {children}\n    </Fab>\n  );\n};\n","import React from \"react\";\n\nimport { createWorker } from \"tesseract.js\";\n\nimport {\n  Button,\n  Card,\n  SwipeableDrawer,\n  CardContent,\n  CardActions,\n  CardHeader,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { CameraAlt } from \"@material-ui/icons\";\n\nconst worker = createWorker({\n  logger: m => console.log(m)\n});\n\nconst initialState = {\n  status: \"\",\n  text: \"\",\n  image: \"\"\n};\n\nconst reducer = (state = initialState, action: OcrActions) => {\n  switch (action.type) {\n    case \"setImage\":\n      return { ...state, image: action.payload };\n    case \"updateStatus\":\n      return { ...state, status: action.payload };\n    case \"updateText\":\n      return { ...state, text: action.payload, status: \"\" };\n    default:\n      return state;\n  }\n};\n\ntype OcrActions = {\n  type: \"updateStatus\" | \"updateText\" | \"setImage\";\n  payload: string;\n};\n\nconst useOcr = () => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const imageRef = React.useRef<HTMLImageElement>(null);\n\n  const processImage = async () => {\n    if (imageRef.current) {\n      dispatch({ type: \"updateStatus\", payload: \"loading\" });\n      await worker.load();\n      await worker.loadLanguage(\"eng\");\n      await worker.initialize(\"eng\");\n      const {\n        data: { text }\n      } = await worker.recognize(imageRef.current);\n      dispatch({ type: \"updateText\", payload: text });\n      return;\n    }\n\n    throw new Error(\"no image found\");\n  };\n\n  const previewImage = (file: File) => {\n    const reader = new FileReader();\n    reader.onload = e => {\n      if (typeof e?.target?.result === \"string\") {\n        dispatch({ type: \"setImage\", payload: e?.target?.result });\n      }\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  return { state, previewImage, processImage, imageRef };\n};\n\nexport const OcrButton: React.FC<{ onComplete(text: string): void }> = ({\n  onComplete\n}) => {\n  const [open, setOpen] = React.useState(false);\n  const { state, previewImage, processImage, imageRef } = useOcr();\n\n  React.useEffect(() => {\n    if (state.text) {\n      onComplete(state.text);\n      setOpen(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.text]);\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>\n        <CameraAlt />\n      </Button>\n      <SwipeableDrawer\n        anchor=\"bottom\"\n        open={open}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n      >\n        <Card>\n          <CardHeader title=\"Text aus Bild extrahieren\" />\n          <CardContent>\n            <input\n              type=\"file\"\n              onChange={e => {\n                const files = e.target.files;\n                if (files) {\n                  previewImage(files[0]);\n                }\n              }}\n            />\n            {state.image && (\n              <img\n                style={{ maxWidth: \"100%\" }}\n                ref={imageRef}\n                src={state.image}\n                alt=\"preview of your upload\"\n              />\n            )}\n          </CardContent>\n          <CardActions>\n            <Button disabled={!state.image} onClick={processImage}>\n              {state.status === \"loading\" ? (\n                <CircularProgress />\n              ) : (\n                \"Text aus dem Bild kopieren\"\n              )}\n            </Button>\n          </CardActions>\n        </Card>\n      </SwipeableDrawer>\n    </>\n  );\n};\n","import Dexie from \"dexie\";\n\nexport interface ListItem {\n  title: string;\n  inBasket: boolean;\n}\n\nexport interface Recipe {\n  title: string;\n  tags: string;\n  ingredients: string;\n  description: string;\n}\n\nexport const DEFAULT_PAGE_SIZE = 50;\n\nexport class ListDb extends Dexie {\n  listItems: Dexie.Table<ListItem, string>;\n  recipes: Dexie.Table<Recipe, string>;\n  constructor() {\n    super(\"recipes-db\");\n    this.version(1).stores({\n      listItems: \"title\",\n      recipes: \"title,tags\"\n    });\n    this.listItems = this.table(\"listItems\");\n    this.recipes = this.table(\"recipes\");\n  }\n}\n\nconst db = new ListDb();\n\nexport const getRecipeByName = async (title: string) => {\n  const [recipe] = await db.recipes\n    .where(\"title\")\n    .equals(title)\n    .toArray();\n\n  return recipe;\n};\n\nexport const getRecipes = () => {\n  return db.recipes.toArray();\n};\n\nexport const getPagedRecipes = (offset = 0) => {\n  return db.recipes\n    .offset(offset)\n    .limit(DEFAULT_PAGE_SIZE)\n    .toArray();\n};\n\nexport const getRecipesCount = () => {\n  return db.recipes.count();\n};\nexport const addRecipe = (recipe: Recipe) => {\n  return db.recipes.add(recipe);\n};\nexport const updateRecipe = (recipe: Recipe) => {\n  return db.recipes.put(recipe);\n};\nexport const deleteRecipe = (title: string) => {\n  return db.recipes.delete(title);\n};\nexport const bulkAddRecipes = (recipes: Recipe[]) => {\n  return db.recipes.bulkPut(recipes);\n};\nexport const getRecipesForExport = () => {\n  return db.recipes.toArray();\n};\n\nexport const getList = () => {\n  return db.listItems.toArray();\n};\n\nexport const addListItem = (listItem: ListItem) => {\n  return db.listItems.add(listItem);\n};\n\nexport const addListItems = (listItems: string) => {\n  return db.listItems.bulkPut(\n    listItems.split(\"\\n\").map(title => ({\n      title,\n      inBasket: false\n    }))\n  );\n};\n\nexport const updateListItem = (listItem: ListItem) => {\n  return db.listItems.put(listItem);\n};\n\nexport const clearList = () => {\n  return db.listItems.clear();\n};\n","import React from \"react\";\n\nimport {\n  Recipe,\n  getRecipeByName,\n  getPagedRecipes,\n  getRecipesCount,\n  DEFAULT_PAGE_SIZE\n} from \"../db\";\n\nexport type Status<T = \"success\"> = \"\" | \"pending\" | \"error\" | T;\n\nconst recipeTitleCache: Record<string, Recipe> = {};\nlet recipeListCache: Recipe[] = [];\n\nexport const useRecipeByTitle = (title: string) => {\n  const [status, setStatus] = React.useState<Status<Recipe>>(\n    recipeTitleCache[title] || \"\"\n  );\n\n  const updateCache = (recipe: Recipe) => {\n    recipeTitleCache[recipe.title] = recipe;\n  };\n\n  const fetchRecipe = async (title: string) => {\n    try {\n      if (recipeTitleCache[title]) {\n        setStatus(recipeTitleCache[title]);\n        return;\n      }\n      setStatus(\"pending\");\n      const result = await getRecipeByName(title);\n      setStatus(result);\n      recipeTitleCache[title] = result;\n    } catch {\n      setStatus(\"error\");\n    }\n  };\n  React.useEffect(() => {\n    fetchRecipe(title);\n  }, [title]);\n\n  return {\n    status,\n    retry: fetchRecipe,\n    updateCache\n  };\n};\n\nexport const useRecipes = () => {\n  const status = \"\";\n  const [recipes, setRecipes] = React.useState<Recipe[]>([]);\n  const [hasMore, setHasMore] = React.useState(false);\n  const offsetRef = React.useRef(0);\n\n  const fetchRecipes = async () => {\n    try {\n      const result = await getPagedRecipes(offsetRef.current);\n      if (result.length) {\n        offsetRef.current += DEFAULT_PAGE_SIZE;\n        const recipeListCache = [...recipes, ...result];\n        setRecipes(recipeListCache);\n        const count = await getRecipesCount();\n        setHasMore(count !== recipeListCache.length);\n      } else {\n        setHasMore(false);\n      }\n    } catch {}\n  };\n\n  return {\n    status,\n    hasMore,\n    recipes,\n    fetchRecipes\n  };\n};\n","export const BASE_PATH = \"/kochbuch\";\nexport const RECIPES_PATH = BASE_PATH + \"/rezepte\";\nexport const LIST_PATH = BASE_PATH + \"/einkaufliste\";\nexport const SETTINGS_PATH = BASE_PATH + \"/einstellungen\";\n","import React from \"react\";\n\n// @ts-ignore\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Add, Edit, Delete } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Typography,\n  CardContent,\n  TextField,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  CardActions\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { Form, Field } from \"react-final-form\";\n\nimport { BottomRightFab, OcrButton } from \"../common\";\nimport {\n  Recipe,\n  addRecipe,\n  updateRecipe,\n  addListItems,\n  deleteRecipe\n} from \"../db\";\nimport { useRecipeByTitle, useRecipes } from \"./recipe-hooks\";\nimport {\n  getRecipeDetailPath,\n  getRecipeDetailEditPath,\n  ADD_RECIPE_PATH\n} from \".\";\n\nimport { RECIPES_PATH, LIST_PATH } from \"../routes-config\";\n\nconst validateRequired = (value: string) => (value ? undefined : \"required\");\n\nconst addUpdateRecipe = async (recipe: Recipe, isUpdate: boolean) => {\n  if (isUpdate) {\n    await updateRecipe(recipe);\n  } else {\n    await addRecipe(recipe);\n  }\n\n  return recipe;\n};\n\nexport const RecipeForm: React.FC<{\n  onComplete: (recipe: Recipe) => void;\n  recipe?: Recipe;\n}> = ({ onComplete, recipe }) => {\n  return (\n    <Card>\n      <CardHeader title=\"Neues Rezept\" />\n      <CardContent>\n        <Form<Recipe>\n          initialValues={recipe}\n          onSubmit={value => addUpdateRecipe(value, Boolean(recipe))}\n        >\n          {({ handleSubmit, submitting, invalid, form }) => (\n            <form\n              autoComplete=\"off\"\n              onSubmit={async e => {\n                const recipe = await handleSubmit(e);\n                if (recipe) {\n                  form.reset();\n                  onComplete(recipe as Recipe);\n                }\n              }}\n            >\n              <Field name=\"title\" validate={validateRequired}>\n                {props => (\n                  <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    error={props.meta.touched && props.meta.error}\n                    label=\"Rezept Titel\"\n                    {...props.input}\n                  />\n                )}\n              </Field>\n              <Field name=\"tags\">\n                {props => (\n                  <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Tags\"\n                    name=\"tags\"\n                    {...props.input}\n                  />\n                )}\n              </Field>\n\n              <Field name=\"ingredients\" validate={validateRequired}>\n                {props => (\n                  <Box mt={2}>\n                    <TextField\n                      margin=\"normal\"\n                      multiline\n                      fullWidth\n                      error={props.meta.touched && props.meta.error}\n                      label=\"Zutaten\"\n                      {...props.input}\n                    />\n                    <OcrButton\n                      onComplete={text => {\n                        props.input.onChange(text);\n                      }}\n                    />\n                  </Box>\n                )}\n              </Field>\n\n              <Field name=\"description\" validate={validateRequired}>\n                {props => (\n                  <Box mt={2}>\n                    <TextField\n                      margin=\"normal\"\n                      multiline\n                      fullWidth\n                      label=\"Zubereitung\"\n                      {...props.input}\n                    />\n                    <OcrButton\n                      onComplete={text => {\n                        props.input.onChange(text);\n                      }}\n                    />\n                  </Box>\n                )}\n              </Field>\n\n              <Box mt={2}>\n                <Button\n                  disabled={invalid || submitting}\n                  color=\"primary\"\n                  type=\"submit\"\n                >\n                  {recipe\n                    ? `änderung an ${recipe.title} speichern`\n                    : \"neues Rezept speichern\"}\n                </Button>\n              </Box>\n            </form>\n          )}\n        </Form>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const RecipeEditForm: React.FC = () => {\n  const navigate = useHistory();\n  const { id } = useParams();\n  const title = decodeURIComponent(id || \"\");\n  const { status, updateCache } = useRecipeByTitle(title);\n\n  if (status === \"\" || status === \"pending\" || status === \"error\") {\n    return <Skeleton height=\"12rem\" />;\n  }\n\n  return (\n    <>\n      <RecipeForm\n        onComplete={recipe => {\n          updateCache(recipe);\n          navigate.push(getRecipeDetailPath(recipe.title));\n        }}\n        recipe={status}\n      />\n\n      <BottomRightFab\n        label=\"Rezept löschen\"\n        onClick={async () => {\n          try {\n            await deleteRecipe(status.title);\n            navigate.push(RECIPES_PATH);\n          } catch (e) {\n            console.log(e);\n          }\n        }}\n      >\n        <Delete />\n      </BottomRightFab>\n    </>\n  );\n};\n\nexport const RecipeDetails: React.FC = () => {\n  const navigate = useHistory();\n  const { id } = useParams();\n  const title = decodeURIComponent(id || \"\");\n  const { status } = useRecipeByTitle(title);\n\n  if (status === \"\" || status === \"pending\") {\n    return <Skeleton height=\"12rem\" />;\n  }\n\n  if (status === \"error\") {\n    return <Box>rezpete konnten nicht geladen werden</Box>;\n  }\n\n  return (\n    <Box mt={3}>\n      <Card>\n        <CardHeader title={status.title} subheader={status.tags}></CardHeader>\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"span\">\n            Zutaten:\n          </Typography>\n          <Typography style={{ whiteSpace: \"pre-wrap\" }}>\n            {status.ingredients}\n          </Typography>\n          <Box mt={4} mb={4}>\n            <Divider />\n          </Box>\n          <Typography style={{ whiteSpace: \"pre-wrap\" }}>\n            {status.description}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            onClick={async () => {\n              await addListItems(status.ingredients);\n              navigate.push(LIST_PATH);\n            }}\n          >\n            {status.title} zur Einkaufsliste hinzufügen\n          </Button>\n        </CardActions>\n      </Card>\n      <BottomRightFab\n        onClick={() => navigate.push(getRecipeDetailEditPath(status.title))}\n        label=\"Rezept bearbeiten\"\n        children={<Edit />}\n      />\n    </Box>\n  );\n};\n\nexport const ListLoader: React.FC = () => {\n  return (\n    <>\n      <Skeleton height=\"4rem\" />\n      <Skeleton height=\"4rem\" />\n    </>\n  );\n};\n\nexport const RecipeList = () => {\n  const { recipes, status, fetchRecipes, hasMore } = useRecipes();\n  const navigate = useHistory();\n\n  React.useEffect(() => {\n    fetchRecipes();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <List>\n        {recipes.map(recipe => (\n          <ListItem\n            onClick={() => navigate.push(getRecipeDetailPath(recipe.title))}\n            key={recipe.title}\n          >\n            <ListItemText primary={recipe.title} secondary={recipe.tags} />\n          </ListItem>\n        ))}\n      </List>\n      {hasMore && <Button onClick={fetchRecipes}>Load more</Button>}\n\n      {status === \"error\" && (\n        <Box>\n          rezpete konnten nicht geladen werden{\" \"}\n          <Button onClick={fetchRecipes}>nochmal versuchen</Button>\n        </Box>\n      )}\n      <BottomRightFab\n        onClick={() => navigate.push(ADD_RECIPE_PATH)}\n        label=\"Rezept hinzufügen\"\n        children={<Add />}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport {\n  RecipeForm,\n  RecipeList,\n  RecipeDetails,\n  RecipeEditForm\n} from \"./recipe-form\";\n\nimport { RECIPES_PATH } from \"../routes-config\";\n\nexport const ADD_RECIPE_PATH = RECIPES_PATH + \"/neues-rezept\";\nexport const RECIPE_DETAILS_PATH = RECIPES_PATH + \"/:id\";\nexport const RECIPE_DETAILS_EDIT_PATH = RECIPE_DETAILS_PATH + \"/bearbeiten\";\nexport const getRecipeDetailPath = (title: string) =>\n  RECIPES_PATH + \"/\" + title;\nexport const getRecipeDetailEditPath = (title: string) =>\n  getRecipeDetailPath(title) + \"/bearbeiten\";\n\nexport const RecipePage = () => {\n  const history = useHistory();\n\n  return (\n    <Switch>\n      <Route exact path={RECIPES_PATH} component={RecipeList} />\n      <Route\n        path={ADD_RECIPE_PATH}\n        render={() => (\n          <RecipeForm\n            onComplete={recipe => {\n              history.push(getRecipeDetailPath(recipe.title));\n            }}\n          />\n        )}\n      />\n      <Route exact path={RECIPE_DETAILS_PATH} component={RecipeDetails} />\n      <Route path={RECIPE_DETAILS_EDIT_PATH} component={RecipeEditForm} />\n    </Switch>\n  );\n};\n","import React from \"react\";\n\nimport { ListItem, getList } from \"../db\";\n\nlet listItemsCache: ListItem[] = [];\n\nexport const useListItems = () => {\n  const [list, setList] = React.useState<ListItem[]>(listItemsCache);\n\n  const fetchList = async () => {\n    try {\n      const result = await getList();\n      listItemsCache = result;\n      setList(result);\n    } catch {}\n  };\n\n  return {\n    list,\n    fetchList\n  };\n};\n","import React from \"react\";\n\n// @ts-ignore\nimport { Save } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button\n} from \"@material-ui/core\";\n\nimport { addListItems } from \"../db\";\n\nexport const ListForm: React.FC<{ onCompleted(): void }> = ({\n  onCompleted\n}) => {\n  return (\n    <Box>\n      <Card>\n        <CardHeader title=\"Einkaufsliste erweitern\" />\n        <CardContent>\n          <form\n            onSubmit={async e => {\n              e.preventDefault();\n              const form = e.currentTarget;\n              try {\n                await addListItems(form.listItems.value);\n                form.reset();\n                onCompleted();\n              } catch (e) {\n                console.log(e);\n              }\n            }}\n          >\n            <TextField\n              multiline\n              fullWidth\n              name=\"listItems\"\n              label=\"Einkaufsliste\"\n              required\n            />\n            <Button type=\"submit\" startIcon={<Save />}>\n              speichern\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { useListItems } from \"./list-hooks\";\nimport {\n  ListItem,\n  ListItemText,\n  SwipeableDrawer,\n  List,\n  Divider,\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  Checkbox\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\n\nimport { BottomRightFab } from \"../common\";\n\nimport { ListForm } from \"./list-form\";\nimport { clearList, updateListItem } from \"../db\";\n\nconst ClearListDialog: React.FC<{ onClearList(): void }> = ({\n  onClearList\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n\n  return (\n    <>\n      <Button onClick={handleOpen}>Liste löschen</Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"clear-list-dialog-title\"\n      >\n        <DialogTitle id=\"clear-list-dialog-title\">\n          Die Einkaufsliste leeren ?\n        </DialogTitle>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            nein\n          </Button>\n          <Button\n            onClick={async () => {\n              try {\n                await clearList();\n                onClearList();\n                handleClose();\n              } catch (e) {\n                console.log(e);\n              }\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            ja\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport const ListPage = () => {\n  const { list, fetchList } = useListItems();\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    fetchList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <List>\n        {list.map(item => (\n          <ListItem\n            button\n            onClick={async () => {\n              await updateListItem({ ...item, inBasket: !item.inBasket });\n              fetchList();\n            }}\n            key={item.title}\n          >\n            <ListItemText>{item.title}</ListItemText>\n            <Checkbox\n              checked={item.inBasket}\n              inputProps={{\n                \"aria-label\": `${item.title} ist im Einkaufswagen`\n              }}\n            />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      {list.length > 0 && (\n        <Box mt={4}>\n          <ClearListDialog onClearList={fetchList} />\n        </Box>\n      )}\n      <SwipeableDrawer\n        anchor=\"bottom\"\n        open={open}\n        onOpen={() => setOpen(true)}\n        onClose={() => setOpen(false)}\n      >\n        <ListForm\n          onCompleted={() => {\n            setOpen(false);\n            fetchList();\n          }}\n        />\n      </SwipeableDrawer>\n      <BottomRightFab onClick={() => setOpen(true)} label=\"brauche sachen\">\n        <Add></Add>\n      </BottomRightFab>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { Button, Snackbar } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nimport { getRecipesForExport, bulkAddRecipes, Recipe } from \"../db\";\n\nexport const ImportRecipes = () => {\n  const [recipes, setRecipes] = React.useState<Recipe[] | null>(null);\n  const [status, setStatus] = React.useState<\"pending\" | \"error\" | \"success\">();\n  const handleImportRecipes = (event: any) => {\n    const onReaderLoad = (event: any) => {\n      console.log(event.target.result);\n      const recipes = JSON.parse(event.target.result);\n      setRecipes(recipes);\n    };\n\n    const reader = new FileReader();\n    reader.onload = onReaderLoad;\n    reader.readAsText(event.target.files[0]);\n  };\n\n  return (\n    <>\n      <input type=\"file\" onChange={handleImportRecipes} />\n      <Button\n        onClick={async () => {\n          setStatus(\"pending\");\n          try {\n            await bulkAddRecipes(recipes || []);\n            setStatus(\"success\");\n          } catch {\n            setStatus(\"error\");\n          }\n        }}\n        disabled={recipes === null || status === \"pending\"}\n      >\n        importieren\n      </Button>\n      <Snackbar\n        autoHideDuration={4000}\n        open={status === \"error\"}\n        onClose={() => setStatus(undefined)}\n        message=\"Oh nein der import hat leider nicht geklappt\"\n      ></Snackbar>\n      <Snackbar\n        autoHideDuration={4000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        open={status === \"success\"}\n        onClose={() => setStatus(undefined)}\n        message={`Import erfolgreich ${recipes?.length ||\n          0} Rezepte hinzugefügt oder\n        aktualisiert`}\n      ></Snackbar>\n    </>\n  );\n};\n\nexport const ExportRecipes = () => {\n  const [href, updateHref] = React.useState(\"\");\n\n  const getData = async () => {\n    const recipes = await getRecipesForExport();\n    const data =\n      \"data:text/json;charset=utf-8,\" +\n      encodeURIComponent(JSON.stringify(recipes));\n    updateHref(data);\n  };\n\n  React.useEffect(() => {\n    getData();\n  }, []);\n\n  if (!href) {\n    return <Skeleton></Skeleton>;\n  }\n\n  return (\n    <Button download=\"recipes.json\" href={href}>\n      exportieren\n    </Button>\n  );\n};\n","import React from \"react\";\n\nimport {\n  Box,\n  Typography,\n  Divider,\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions\n} from \"@material-ui/core\";\nimport { ExportRecipes, ImportRecipes } from \"./import-export\";\n\nexport const SettingsPage = () => {\n  return (\n    <Box>\n      <Typography>Einstellungen</Typography>\n      <Divider />\n      <Card>\n        <CardHeader title=\"Rezepte\"></CardHeader>\n        <CardActions>\n          <ExportRecipes />\n        </CardActions>\n      </Card>\n      <Card>\n        <CardContent>\n          <ImportRecipes />\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n","import React from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory\n} from \"react-router-dom\";\n\nimport { RecipePage } from \"./recipe\";\nimport { ListPage } from \"./list\";\nimport { SettingsPage } from \"./settings\";\n\nimport { FormatListBulleted, MenuBook, Settings } from \"@material-ui/icons\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  AppBar,\n  BottomNavigation,\n  BottomNavigationAction\n} from \"@material-ui/core\";\nimport { RECIPES_PATH, LIST_PATH, SETTINGS_PATH } from \"./routes-config\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    nav: {\n      marginTop: theme.spacing(8),\n      bottom: 0,\n      top: \"auto\"\n    }\n  })\n);\n\nconst BottomNav = () => {\n  const navigate = useHistory();\n  const styles = useStyles();\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [_1, _2, value] = navigate.location.pathname.split(\"/\");\n\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={styles.nav}>\n      <BottomNavigation value={value} showLabels>\n        <BottomNavigationAction\n          onClick={() => navigate.push(RECIPES_PATH)}\n          value=\"rezepte\"\n          label=\"Rezepte\"\n          icon={<FormatListBulleted />}\n        />\n        <BottomNavigationAction\n          onClick={() => navigate.push(LIST_PATH)}\n          value=\"einkaufliste\"\n          label=\"Liste\"\n          icon={<MenuBook />}\n        />\n        <BottomNavigationAction\n          onClick={() => navigate.push(SETTINGS_PATH)}\n          value=\"einstellungen\"\n          label=\"Einstellungen\"\n          icon={<Settings />}\n        />\n      </BottomNavigation>\n    </AppBar>\n  );\n};\n\nexport const RootRoutes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path={RECIPES_PATH} component={RecipePage} />\n        <Route path={LIST_PATH} component={ListPage} />\n        <Route path={SETTINGS_PATH} component={SettingsPage} />\n        <Redirect from=\"/\" to={RECIPES_PATH} />\n      </Switch>\n      <BottomNav />\n    </Router>\n  );\n};\n","import React from \"react\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { Container, Box } from \"@material-ui/core\";\nimport { RootRoutes } from \"./routes\";\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\"\n        }\n      }),\n    [prefersDarkMode]\n  );\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <Container>\n        <Box mt={2} mb={8}>\n          <RootRoutes />\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}