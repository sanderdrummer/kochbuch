{"version":3,"sources":["common/fab.tsx","common/search-input.tsx","common/toast.tsx","api.ts","recipe/recipe-resource.tsx","recipe/recipe-form.tsx","routes-config.ts","recipe/recipe-list.tsx","list/list-hooks.tsx","recipe/recipe-details.tsx","recipe/recipe-page.tsx","list/list-form.tsx","list/list-page.tsx","settings/import-export.tsx","settings/api-url.tsx","settings/settings-page.tsx","routes.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["fabStyles","makeStyles","theme","createStyles","fab","position","bottom","spacing","right","BottomRightFab","onClick","label","children","isLoading","styles","Fab","disabled","className","color","aria-label","useStyles","root","padding","display","alignItems","input","marginLeft","flex","iconButton","divider","height","margin","SearchInput","onSubmit","classes","React","useState","query","setQuery","useEffect","Paper","e","preventDefault","component","InputBase","value","onChange","target","placeholder","inputProps","IconButton","type","Divider","orientation","Toast","open","onClose","severity","Snackbar","autoHideDuration","Alert","getApiUrl","localStorage","getItem","post","endpoint","params","a","options","mode","method","body","JSON","stringify","headers","fetch","then","res","json","get","initialState","tags","recipes","hasError","recipeReducer","state","action","data","reduce","recipe","title","allRecipes","normalizeResponse","nextState","RecipeDispatchContext","createContext","RecipeContext","RecipeProvider","useReducer","dispatch","fetchRecipes","Provider","useRecipeDispatch","useContext","useRecipeState","updateRecipe","split","deleteRecipe","useRecipeByTitle","validateRequired","undefined","RecipeForm","onComplete","setState","Card","CardHeader","CardContent","initialValues","handleSubmit","submitting","invalid","form","autoComplete","reset","name","validate","props","TextField","fullWidth","error","meta","touched","Box","mt","multiline","Button","RecipeEditForm","navigate","useHistory","id","useParams","decodeURIComponent","setIsLoading","setHasError","push","getRecipeDetailPath","console","log","Delete","Skeleton","RecipeList","Object","values","filtered","setFiltered","lowerCaseQuery","toLowerCase","filter","includes","filterRecipes","List","map","ListItem","button","key","ListItemText","primary","secondary","ADD_RECIPE_PATH","Add","saveLocalStorageJson","item","setItem","getList","list","parse","getLocalStorageJson","basket","checkListItem","listItems","listItem","unCheckListItem","addListItems","bulkList","clearList","listItemsCache","RecipeDetails","subheader","startIcon","MenuBook","ingredients","getRecipeDetailEditPath","Edit","Typography","style","whiteSpace","description","RECIPES_PATH","RecipePage","history","exact","path","render","RECIPE_DETAILS_PATH","ListForm","onCompleted","setValue","window","setTimeout","clearTimeout","required","Save","ClearListDialog","onClearList","setOpen","handleClose","Dialog","aria-labelledby","DialogTitle","DialogActions","autoFocus","CardList","items","onSelect","isChecked","headline","length","Checkbox","checked","ListPage","setList","fetchList","result","useListItems","alignContent","justifyContent","mb","Drawer","anchor","throttledUpdate","forEach","index","ImportRecipes","setRecipes","status","setStatus","event","reader","FileReader","onload","readAsText","files","message","anchorOrigin","vertical","horizontal","ExportRecipes","href","updateHref","encodeURIComponent","download","ApiUrlSetting","url","setUrl","m","variant","SettingsPage","CardActions","marginTop","nav","top","BottomNav","location","useLocation","AppBar","BottomNavigation","pathname","showLabels","BottomNavigationAction","icon","FormatListBulleted","Settings","RootRoutes","from","to","App","createMuiTheme","palette","main","ThemeProvider","CssBaseline","Container","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","origin","addEventListener","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b2256113.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Fab, Theme } from \"@material-ui/core\";\n\nconst fabStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      position: \"fixed\",\n      bottom: theme.spacing(8),\n\n      right: theme.spacing(2),\n    },\n  })\n);\n\nexport const BottomRightFab: React.FC<{\n  onClick: (e: any) => void;\n  label: string;\n  isLoading?: boolean;\n}> = ({ onClick, label, children, isLoading }) => {\n  const styles = fabStyles();\n  return (\n    <Fab\n      onClick={onClick}\n      disabled={isLoading}\n      className={styles.fab}\n      color=\"primary\"\n      aria-label={label}\n    >\n      {children}\n    </Fab>\n  );\n};\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Clear from \"@material-ui/icons/Clear\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  })\n);\n\nexport const SearchInput: React.FC<{\n  onSubmit(query: string): void;\n  label: string;\n}> = ({ onSubmit, label }) => {\n  const classes = useStyles();\n  const [query, setQuery] = React.useState(\"\");\n  const reset = () => {\n    setQuery(\"\");\n    onSubmit(\"\");\n  };\n  React.useEffect(() => {\n    onSubmit(query);\n  }, [onSubmit, query]);\n  return (\n    <Paper\n      onSubmit={(e) => {\n        e.preventDefault();\n        onSubmit(query);\n      }}\n      component=\"form\"\n      className={classes.root}\n    >\n      <InputBase\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        className={classes.input}\n        placeholder={label}\n        inputProps={{ \"aria-label\": label }}\n      />\n      <IconButton\n        type=\"button\"\n        color=\"secondary\"\n        className={classes.iconButton}\n        aria-label=\"Suche löschen\"\n        onClick={reset}\n      >\n        <Clear />\n      </IconButton>\n      <Divider className={classes.divider} orientation=\"vertical\" />\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"suchen\"\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n};\n","import React from \"react\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { Alert, Color } from \"@material-ui/lab\";\n\nexport const Toast: React.FC<{\n  open: boolean;\n  onClose(): void;\n  severity: Color;\n}> = ({ open, onClose, children, severity }) => {\n  return (\n    <Snackbar open={open} autoHideDuration={4000} onClose={onClose}>\n      <Alert onClose={onClose} severity={severity}>\n        {children}\n      </Alert>\n    </Snackbar>\n  );\n};\n","export const API_URL_KEY = \"recipe-api-url\";\nconst getApiUrl = (): string => {\n  return localStorage.getItem(API_URL_KEY) || \"\";\n};\nexport async function post<T = any>(endpoint: string, params: any): Promise<T> {\n  const options: RequestInit = {\n    mode: \"cors\",\n    method: \"POST\",\n    body: JSON.stringify(params),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetch(`${getApiUrl()}${endpoint}`, options).then(async (res) =>\n    res.json()\n  );\n}\n\nexport async function get<T = any>(endpoint: string): Promise<T> {\n  const options: RequestInit = {\n    mode: \"cors\",\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetch(`${getApiUrl()}${endpoint}`, options).then(async (res) => {\n    return res.json();\n  });\n}\n","import React from \"react\";\nimport { get, post } from \"../api\";\n\nexport const mockResponse = {\n  recipes: [\n    {\n      title: \"recipe2\",\n      tags: \"tag1\",\n      ingredients: \"in1 in2 in3\",\n      description: \"describe\",\n      image: \"\",\n    },\n  ],\n  tags: [\"tag1\"],\n};\n\ntype RecipeResponse = {\n  recipes: Recipe[];\n  tags: string[];\n};\n\nexport type Recipe = {\n  title: string;\n  tags: string;\n  ingredients: string;\n  description: string;\n  image: string;\n};\n\nexport type RecipeState = {\n  isLoading: boolean;\n  hasError: boolean;\n  recipes: Record<string, Recipe>;\n  tags: string[];\n};\n\nexport type RecipeAction =\n  | { type: \"START_LOADING\" }\n  | { type: \"HAS_ERROR\" }\n  | { type: \"DATA_FETCHED\"; data: RecipeResponse }\n  | { type: \"REMOVE_RECIPE\"; recipe: Recipe };\nconst initialState: RecipeState = {\n  isLoading: false,\n  tags: [],\n  recipes: {},\n  hasError: false,\n};\nconst normalizeResponse = (\n  state: RecipeState,\n  data: RecipeResponse\n): RecipeState => {\n  const initialValue: Record<string, Recipe> = {};\n  const recipes = data.recipes.reduce((recipes, recipe) => {\n    return { ...recipes, [recipe.title]: recipe };\n  }, initialValue);\n  const allRecipes = { ...state.recipes, ...recipes };\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    tags: data.tags,\n    recipes: allRecipes,\n  };\n};\n\nconst recipeReducer = (state: RecipeState, action: RecipeAction) => {\n  switch (action.type) {\n    case \"DATA_FETCHED\":\n      return normalizeResponse(state, action.data);\n    case \"HAS_ERROR\":\n      return { ...state, hasError: true };\n    case \"START_LOADING\":\n      return { ...state, hasError: false, isLoading: true };\n    case \"REMOVE_RECIPE\":\n      const nextState = { ...state };\n      delete nextState.recipes[action.recipe.title];\n      return nextState;\n    default:\n      return state;\n  }\n};\ntype RecipeDispatch = React.Dispatch<RecipeAction>;\nconst RecipeDispatchContext = React.createContext<RecipeDispatch>(() => {});\nconst RecipeContext = React.createContext(initialState);\n\nexport const RecipeProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = React.useReducer(recipeReducer, initialState);\n\n  React.useEffect(() => {\n    fetchRecipes(dispatch);\n  }, []);\n\n  return (\n    <RecipeDispatchContext.Provider value={dispatch}>\n      <RecipeContext.Provider value={state}>{children}</RecipeContext.Provider>\n    </RecipeDispatchContext.Provider>\n  );\n};\n\nexport const useRecipeDispatch = () => {\n  return React.useContext(RecipeDispatchContext);\n};\n\nexport const useRecipeState = () => {\n  return React.useContext(RecipeContext);\n};\n\nexport const fetchRecipes = async (dispatch: RecipeDispatch) => {\n  dispatch({ type: \"START_LOADING\" });\n  try {\n    const data = await get(\"recipe\");\n    dispatch({ type: \"DATA_FETCHED\", data });\n  } catch {\n    dispatch({ type: \"HAS_ERROR\" });\n  }\n};\n\nexport const updateRecipe = async (\n  dispatch: RecipeDispatch,\n  recipe: Recipe\n) => {\n  await post(\"recipe\", recipe);\n  dispatch({\n    type: \"DATA_FETCHED\",\n    data: { recipes: [recipe], tags: recipe.tags.split(\" \") },\n  });\n};\n\nexport const deleteRecipe = async (recipe: Recipe) => {\n  return await post(\"delete-recipe\", recipe);\n};\n\nexport const useRecipeByTitle = (title: string) => {\n  const state = useRecipeState();\n  return state.recipes[title];\n};\n","import React from \"react\";\n\n// @ts-ignore\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Delete } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { Form, Field } from \"react-final-form\";\n\nimport { BottomRightFab, Toast } from \"../common\";\nimport { getRecipeDetailPath } from \".\";\n\nimport { RECIPES_PATH } from \"../routes-config\";\nimport {\n  Recipe,\n  updateRecipe,\n  useRecipeDispatch,\n  deleteRecipe,\n  useRecipeByTitle,\n} from \"./recipe-resource\";\n\nconst validateRequired = (value: string) => (value ? undefined : \"required\");\n\nexport const RecipeForm: React.FC<{\n  onComplete: (recipe: Recipe) => void;\n  recipe?: Recipe;\n}> = ({ onComplete, recipe }) => {\n  const dispatch = useRecipeDispatch();\n  const [state, setState] = React.useState<\"\" | \"loading\" | \"error\">(\"\");\n  return (\n    <Card>\n      <CardHeader title=\"Neues Rezept\" />\n      <CardContent>\n        <Form<Recipe>\n          initialValues={recipe}\n          onSubmit={async (recipe) => {\n            setState(\"loading\");\n            try {\n              await updateRecipe(dispatch, recipe);\n              setState(\"\");\n              return recipe;\n            } catch {\n              setState(\"error\");\n            }\n            return undefined;\n          }}\n        >\n          {({ handleSubmit, submitting, invalid, form }) => (\n            <form\n              autoComplete=\"off\"\n              onSubmit={async (e) => {\n                const recipe = await handleSubmit(e);\n                if (recipe) {\n                  form.reset();\n                  onComplete(recipe as Recipe);\n                }\n              }}\n            >\n              <Field name=\"title\" validate={validateRequired}>\n                {(props) => (\n                  <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    error={props.meta.touched && props.meta.error}\n                    label=\"Rezept Titel\"\n                    {...props.input}\n                  />\n                )}\n              </Field>\n              <Field name=\"tags\">\n                {(props) => (\n                  <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Tags\"\n                    {...props.input}\n                  />\n                )}\n              </Field>\n\n              <Field name=\"ingredients\" validate={validateRequired}>\n                {(props) => (\n                  <Box mt={2}>\n                    <TextField\n                      margin=\"normal\"\n                      multiline\n                      fullWidth\n                      error={props.meta.touched && props.meta.error}\n                      label=\"Zutaten\"\n                      {...props.input}\n                    />\n                  </Box>\n                )}\n              </Field>\n\n              <Field name=\"description\" validate={validateRequired}>\n                {(props) => (\n                  <Box mt={2}>\n                    <TextField\n                      margin=\"normal\"\n                      multiline\n                      fullWidth\n                      error={props.meta.touched && props.meta.error}\n                      label=\"Zubereitung\"\n                      {...props.input}\n                    />\n                  </Box>\n                )}\n              </Field>\n\n              <Box mt={2}>\n                <Button\n                  disabled={invalid || submitting}\n                  color=\"primary\"\n                  type=\"submit\"\n                >\n                  {recipe\n                    ? `änderung an ${recipe.title} speichern`\n                    : \"neues Rezept speichern\"}\n                </Button>\n              </Box>\n            </form>\n          )}\n        </Form>\n      </CardContent>\n      <Toast\n        open={state === \"error\"}\n        severity=\"error\"\n        onClose={() => setState(\"\")}\n      >\n        Das hat leider nicht geklappt\n      </Toast>\n    </Card>\n  );\n};\n\nexport const RecipeEditForm: React.FC = () => {\n  const navigate = useHistory();\n  const { id } = useParams();\n  const title = decodeURIComponent(id || \"\");\n  const recipe = useRecipeByTitle(title);\n  const dispatch = useRecipeDispatch();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [hasError, setHasError] = React.useState(false);\n  if (!recipe) {\n    return <Skeleton height=\"12rem\" />;\n  }\n\n  return (\n    <>\n      <RecipeForm\n        onComplete={(recipe) => {\n          updateRecipe(dispatch, recipe);\n\n          navigate.push(getRecipeDetailPath(recipe.title));\n        }}\n        recipe={recipe}\n      />\n\n      <BottomRightFab\n        label=\"Rezept löschen\"\n        isLoading={isLoading}\n        onClick={async () => {\n          setHasError(false);\n          setIsLoading(true);\n          try {\n            await deleteRecipe(recipe);\n            dispatch({ type: \"REMOVE_RECIPE\", recipe });\n            navigate.push(RECIPES_PATH);\n          } catch (e) {\n            console.log(e);\n            setHasError(true);\n          }\n          setIsLoading(false);\n        }}\n      >\n        <Delete />\n      </BottomRightFab>\n      <Toast\n        severity=\"error\"\n        open={hasError}\n        onClose={() => setHasError(false)}\n      >\n        Das hat leider nicht geklappt\n      </Toast>\n    </>\n  );\n};\n","export const BASE_PATH = \"\";\nexport const RECIPES_PATH = BASE_PATH + \"/rezepte\";\nexport const LIST_PATH = BASE_PATH + \"/einkaufliste\";\nexport const SETTINGS_PATH = BASE_PATH + \"/einstellungen\";\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport { Skeleton } from \"@material-ui/lab\";\nimport { Add } from \"@material-ui/icons\";\nimport { List, ListItem, ListItemText, Button, Box } from \"@material-ui/core\";\n\nimport { SearchInput, BottomRightFab } from \"../common\";\nimport { getRecipeDetailPath, ADD_RECIPE_PATH } from \".\";\nimport {\n  useRecipeDispatch,\n  useRecipeState,\n  fetchRecipes,\n  Recipe,\n} from \"./recipe-resource\";\n\nexport const ListLoader: React.FC = () => {\n  return (\n    <>\n      <Skeleton height=\"4rem\" />\n      <Skeleton height=\"4rem\" />\n    </>\n  );\n};\n\nconst filterRecipes = (\n  recipes: Recipe[] = [],\n  query: string = \"\"\n): Recipe[] => {\n  if (!query) {\n    return recipes || [];\n  }\n  const lowerCaseQuery = query.toLowerCase();\n  return recipes.filter((recipe) => {\n    return (\n      recipe.title.toLowerCase().includes(lowerCaseQuery) ||\n      recipe.tags.toLowerCase().includes(lowerCaseQuery)\n    );\n  });\n};\n\nexport const RecipeList = () => {\n  const navigate = useHistory();\n  const { recipes, hasError, isLoading } = useRecipeState();\n  const [query, setQuery] = React.useState(\"\");\n  const [filtered, setFiltered] = React.useState<Recipe[]>(\n    Object.values(recipes)\n  );\n  React.useEffect(() => {\n    setFiltered(filterRecipes(Object.values(recipes), query));\n  }, [query, recipes]);\n\n  const dispatch = useRecipeDispatch();\n\n  return (\n    <>\n      <SearchInput label=\"was kochen ?\" onSubmit={setQuery} />\n      <List>\n        {filtered.map((recipe) => (\n          <ListItem\n            button\n            onClick={() => navigate.push(getRecipeDetailPath(recipe.title))}\n            key={recipe.title}\n          >\n            <ListItemText primary={recipe.title} secondary={recipe.tags} />\n          </ListItem>\n        ))}\n      </List>\n      {isLoading && <Skeleton />}\n      {hasError && (\n        <Box>\n          rezpete konnten nicht geladen werden{\" \"}\n          <Button onClick={() => fetchRecipes(dispatch)}>\n            nochmal versuchen\n          </Button>\n        </Box>\n      )}\n      <BottomRightFab\n        onClick={() => navigate.push(ADD_RECIPE_PATH)}\n        label=\"Rezept hinzufügen\"\n        children={<Add />}\n      />\n    </>\n  );\n};\n","import React from \"react\";\n\ntype ListItems = {\n  list: string[];\n  basket: string[];\n};\nconst LIST_KEY = \"LIST_KEY\";\nconst getLocalStorageJson = (key: string) => {\n  const json = localStorage.getItem(key);\n  if (json) {\n    return JSON.parse(json);\n  }\n  return undefined;\n};\nconst saveLocalStorageJson = (key: string, item: any) => {\n  localStorage.setItem(key, JSON.stringify(item));\n};\n\nexport const getList = (): ListItems => {\n  const list = getLocalStorageJson(LIST_KEY);\n  return list ? list : { basket: [], list: [] };\n};\n\nexport const addListItem = (item: string) => {\n  const listItems = getList();\n  listItems.list.push(item);\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const checkListItem = async (item: string) => {\n  const listItems = getList();\n  listItems.list = listItems.list.filter((listItem) => listItem !== item);\n  listItems.basket.push(item);\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const unCheckListItem = (item: string) => {\n  const listItems = getList();\n  listItems.basket = listItems.basket.filter((listItem) => listItem !== item);\n  listItems.list.push(item);\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const addListItems = (bulkList: string) => {\n  const listItems = getList();\n  listItems.list = [...listItems.list, ...bulkList.split(\"\\n\")];\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const clearList = () => {\n  const listItems = getList();\n  listItems.basket = [];\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nlet listItemsCache: {\n  list: string[];\n  basket: string[];\n} = { list: [], basket: [] };\n\nexport const useListItems = () => {\n  const [list, setList] = React.useState<{\n    list: string[];\n    basket: string[];\n  }>(listItemsCache);\n\n  const fetchList = async () => {\n    try {\n      const result = await getList();\n      listItemsCache = result;\n      setList(result);\n    } catch {}\n  };\n\n  return {\n    list,\n    fetchList,\n  };\n};\n","import React from \"react\";\n\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Edit, MenuBook } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Typography,\n  CardContent,\n  Button,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nimport { BottomRightFab } from \"../common\";\nimport { getRecipeDetailEditPath } from \".\";\n\nimport { LIST_PATH } from \"../routes-config\";\nimport { useRecipeByTitle } from \"./recipe-resource\";\nimport { addListItems } from \"../list/list-hooks\";\n\nexport const RecipeDetails: React.FC = () => {\n  const navigate = useHistory();\n  const { id } = useParams();\n  const title = decodeURIComponent(id || \"\");\n  const recipe = useRecipeByTitle(title);\n\n  if (!recipe) {\n    return <Skeleton height=\"12rem\" />;\n  }\n\n  return (\n    <Box mt={3}>\n      <Card>\n        <CardHeader\n          title={recipe.title}\n          subheader={recipe.tags}\n          action={\n            <Button\n              startIcon={<MenuBook />}\n              onClick={async () => {\n                addListItems(recipe.ingredients);\n                navigate.push(LIST_PATH);\n              }}\n            >\n              zur Einkaufsliste\n            </Button>\n          }\n        ></CardHeader>\n      </Card>\n      <BottomRightFab\n        onClick={() => navigate.push(getRecipeDetailEditPath(recipe.title))}\n        label=\"Rezept bearbeiten\"\n        children={<Edit />}\n      />\n      <Box mt={3}>\n        <Card>\n          <CardHeader subheader=\"Zutaten\"></CardHeader>\n          <CardContent>\n            <Typography style={{ whiteSpace: \"pre-wrap\" }}>\n              {recipe.ingredients}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Box>\n      <Box mt={3}>\n        <Card>\n          <CardHeader subheader=\"Zubereitung\"></CardHeader>\n          <CardContent>\n            <Typography style={{ whiteSpace: \"pre-wrap\" }}>\n              {recipe.description}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\n\nimport { RecipeForm, RecipeEditForm } from \"./recipe-form\";\nimport { RecipeList } from \"./recipe-list\";\nimport { RecipeDetails } from \"./recipe-details\";\n\nimport { RECIPES_PATH } from \"../routes-config\";\n\nexport const ADD_RECIPE_PATH = RECIPES_PATH + \"/neues-rezept\";\nexport const RECIPE_DETAILS_PATH = RECIPES_PATH + \"/:id\";\nexport const RECIPE_DETAILS_EDIT_PATH = RECIPE_DETAILS_PATH + \"/bearbeiten\";\n\nexport const getRecipeDetailPath = (title: string) =>\n  RECIPES_PATH + \"/\" + title;\nexport const getRecipeDetailEditPath = (title: string) =>\n  getRecipeDetailPath(title) + \"/bearbeiten\";\n\nexport const RecipePage = () => {\n  const history = useHistory();\n\n  return (\n    <Switch>\n      <Route exact path={RECIPES_PATH} component={RecipeList} />\n      <Route\n        path={ADD_RECIPE_PATH}\n        render={() => (\n          <RecipeForm\n            onComplete={(recipe) => {\n              history.push(getRecipeDetailPath(recipe.title));\n            }}\n          />\n        )}\n      />\n      <Route exact path={RECIPE_DETAILS_PATH} component={RecipeDetails} />\n      <Route path={RECIPE_DETAILS_EDIT_PATH} component={RecipeEditForm} />\n    </Switch>\n  );\n};\n","import React from \"react\";\n\n// @ts-ignore\nimport { Save } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { addListItems } from \"./list-hooks\";\n\nconst key = \"shoppingList\";\nexport const ListForm: React.FC<{ onCompleted(): void }> = ({\n  onCompleted,\n}) => {\n  const [value, setValue] = React.useState(\"\");\n  React.useEffect(() => {\n    const list = window.localStorage.getItem(key) || \"\";\n    if (typeof list === \"string\") {\n      setValue(list);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const id = setTimeout(() => {\n      window.localStorage.setItem(key, value);\n    }, 100);\n    return () => {\n      clearTimeout(id);\n    };\n  }, [value]);\n\n  return (\n    <Box>\n      <Card>\n        <CardHeader title=\"Einkaufsliste erweitern\" />\n        <CardContent>\n          <form\n            onSubmit={async (e) => {\n              e.preventDefault();\n              try {\n                addListItems(value);\n                setValue(\"\");\n                onCompleted();\n              } catch (e) {\n                console.log(e);\n              }\n            }}\n          >\n            <TextField\n              value={value}\n              onChange={(e) => setValue(e.target.value)}\n              multiline\n              fullWidth\n              name=\"listItems\"\n              label=\"Einkaufsliste\"\n              required\n            />\n            <Button type=\"submit\" startIcon={<Save />}>\n              speichern\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport {\n  useListItems,\n  clearList,\n  checkListItem,\n  unCheckListItem,\n} from \"./list-hooks\";\nimport {\n  ListItem,\n  ListItemText,\n  Drawer,\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  Checkbox,\n  CardHeader,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\n\nimport { BottomRightFab } from \"../common\";\n\nimport { ListForm } from \"./list-form\";\n\nconst ClearListDialog: React.FC<{ onClearList(): void }> = ({\n  onClearList,\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n\n  return (\n    <>\n      <Button onClick={handleOpen}>Liste löschen</Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"clear-list-dialog-title\"\n      >\n        <DialogTitle id=\"clear-list-dialog-title\">\n          Die Einkaufsliste leeren ?\n        </DialogTitle>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            nein\n          </Button>\n          <Button\n            onClick={async () => {\n              try {\n                clearList();\n                onClearList();\n                handleClose();\n              } catch (e) {\n                console.log(e);\n              }\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            ja\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst CardList: React.FC<{\n  items: string[];\n  onSelect(item: string): void;\n  isChecked: boolean;\n  headline: string;\n}> = ({ items, onSelect, isChecked, headline }) => {\n  if (items.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader subheader={headline}></CardHeader>\n      <CardContent>\n        {items.map((item) => (\n          <ListItem\n            button\n            onClick={() => {\n              onSelect(item);\n            }}\n            key={item}\n          >\n            <ListItemText>{item}</ListItemText>\n            <Checkbox\n              checked={isChecked}\n              inputProps={{\n                \"aria-label\": `${item} ist im Einkaufswagen`,\n              }}\n            />\n          </ListItem>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const ListPage = () => {\n  const { list, fetchList } = useListItems();\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    fetchList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {list.list.length === 0 && list.basket.length === 0 && (\n        <Box display=\"flex\" alignContent=\"center\" justifyContent=\"center\">\n          Du hast noch nichts auf der Einkaufsliste\n        </Box>\n      )}\n      <CardList\n        items={list.list}\n        isChecked={false}\n        headline=\"In den Einkaufswagen\"\n        onSelect={async (item) => {\n          checkListItem(item);\n          fetchList();\n        }}\n      />\n      <Box mt={3} mb={3}></Box>\n      <CardList\n        items={list.basket}\n        isChecked={true}\n        headline=\"Schon dabei\"\n        onSelect={async (item) => {\n          unCheckListItem(item);\n          fetchList();\n        }}\n      />\n\n      {list.basket.length > 0 && (\n        <Box mt={4}>\n          <ClearListDialog onClearList={fetchList} />\n        </Box>\n      )}\n      <Drawer anchor=\"top\" open={open} onClose={() => setOpen(false)}>\n        <ListForm\n          onCompleted={() => {\n            setOpen(false);\n            fetchList();\n          }}\n        />\n      </Drawer>\n      <BottomRightFab onClick={() => setOpen(true)} label=\"brauche sachen\">\n        <Add></Add>\n      </BottomRightFab>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { Button, Snackbar } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nimport {\n  updateRecipe,\n  Recipe,\n  useRecipeDispatch,\n  useRecipeState,\n} from \"../recipe/recipe-resource\";\nconst throttledUpdate = (dispatch: any, recipes: Recipe[]) => {\n  recipes.forEach((recipe, index) => {\n    setTimeout(async () => {\n      try {\n        updateRecipe(dispatch, recipe);\n      } catch (e) {\n        console.log(recipe, e);\n      }\n    }, 1500 * index);\n  });\n};\nexport const ImportRecipes = () => {\n  const [recipes, setRecipes] = React.useState<Recipe[] | null>(null);\n  const [status, setStatus] = React.useState<\"pending\" | \"error\" | \"success\">();\n  const dispatch = useRecipeDispatch();\n  const handleImportRecipes = (event: any) => {\n    const onReaderLoad = (event: any) => {\n      const recipes = JSON.parse(event.target.result);\n      setRecipes(recipes);\n    };\n\n    const reader = new FileReader();\n    reader.onload = onReaderLoad;\n    reader.readAsText(event.target.files[0]);\n  };\n\n  return (\n    <>\n      <input type=\"file\" onChange={handleImportRecipes} />\n      <Button\n        onClick={async () => {\n          setStatus(\"pending\");\n          try {\n            throttledUpdate(dispatch, recipes || []);\n            setStatus(\"success\");\n          } catch {\n            setStatus(\"error\");\n          }\n        }}\n        disabled={recipes === null || status === \"pending\"}\n      >\n        importieren\n      </Button>\n      <Snackbar\n        autoHideDuration={4000}\n        open={status === \"error\"}\n        onClose={() => setStatus(undefined)}\n        message=\"Oh nein der import hat leider nicht geklappt\"\n      ></Snackbar>\n      <Snackbar\n        autoHideDuration={4000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        open={status === \"success\"}\n        onClose={() => setStatus(undefined)}\n        message={`Import erfolgreich ${\n          recipes?.length || 0\n        } Rezepte hinzugefügt oder\n        aktualisiert`}\n      ></Snackbar>\n    </>\n  );\n};\n\nexport const ExportRecipes = () => {\n  const [href, updateHref] = React.useState(\"\");\n  const { recipes } = useRecipeState();\n\n  React.useEffect(() => {\n    if (recipes) {\n      const data =\n        \"data:text/json;charset=utf-8,\" +\n        encodeURIComponent(JSON.stringify(Object.values(recipes)));\n      updateHref(data);\n    }\n  }, [recipes]);\n\n  if (!href) {\n    return <Skeleton></Skeleton>;\n  }\n\n  return (\n    <Button download=\"recipes\" href={href}>\n      exportieren\n    </Button>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n  Snackbar,\n} from \"@material-ui/core\";\nimport { Save } from \"@material-ui/icons\";\nimport { API_URL_KEY } from \"../api\";\nimport { Alert } from \"@material-ui/lab\";\nexport const ApiUrlSetting = () => {\n  const [url, setUrl] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const submit = () => {\n    localStorage.setItem(API_URL_KEY, url);\n    setOpen(true);\n  };\n  React.useEffect(() => {\n    const url = localStorage.getItem(API_URL_KEY);\n    if (url) {\n      setUrl(url);\n    }\n  }, []);\n  return (\n    <Box mt={3}>\n      <Card>\n        <CardHeader title=\"Api Url\" />\n        <CardContent>\n          <TextField\n            label=\"API URL\"\n            placeholder=\"https://your-api.com/\"\n            fullWidth\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n          ></TextField>\n          <Box m={1}></Box>\n          <Button variant=\"outlined\" onClick={submit}>\n            <Save />\n          </Button>\n        </CardContent>\n      </Card>\n      <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          Neue url gespeichert\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n","import React from \"react\";\n\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n} from \"@material-ui/core\";\nimport { ExportRecipes, ImportRecipes } from \"./import-export\";\nimport { ApiUrlSetting } from \"./api-url\";\n\nexport const SettingsPage = () => {\n  return (\n    <Box>\n      <Card>\n        <CardHeader title=\"Rezepte exportieren\"></CardHeader>\n        <CardActions>\n          <ExportRecipes />\n        </CardActions>\n      </Card>\n      <Card style={{ marginTop: \"1rem\" }}>\n        <CardHeader title=\"Rezepte importieren\"></CardHeader>\n        <CardContent>\n          <ImportRecipes />\n        </CardContent>\n      </Card>\n      <ApiUrlSetting />\n    </Box>\n  );\n};\n","import React from \"react\";\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useLocation,\n  useHistory,\n} from \"react-router-dom\";\n\nimport { RecipePage } from \"./recipe\";\nimport { ListPage } from \"./list\";\nimport { SettingsPage } from \"./settings\";\n\nimport { FormatListBulleted, MenuBook, Settings } from \"@material-ui/icons\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  AppBar,\n  BottomNavigation,\n  BottomNavigationAction,\n} from \"@material-ui/core\";\nimport { RECIPES_PATH, LIST_PATH, SETTINGS_PATH } from \"./routes-config\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    nav: {\n      marginTop: theme.spacing(8),\n      bottom: 0,\n      top: \"auto\",\n    },\n  })\n);\n\nconst BottomNav = () => {\n  const navigate = useHistory();\n  const styles = useStyles();\n  const location = useLocation();\n\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={styles.nav}>\n      <BottomNavigation value={location.pathname} showLabels>\n        <BottomNavigationAction\n          onClick={() => navigate.push(RECIPES_PATH)}\n          value={RECIPES_PATH}\n          label=\"Rezepte\"\n          icon={<FormatListBulleted />}\n        />\n        <BottomNavigationAction\n          onClick={() => navigate.push(LIST_PATH)}\n          value={LIST_PATH}\n          label=\"Liste\"\n          icon={<MenuBook />}\n        />\n        <BottomNavigationAction\n          onClick={() => navigate.push(SETTINGS_PATH)}\n          value={SETTINGS_PATH}\n          label=\"Einstellungen\"\n          icon={<Settings />}\n        />\n      </BottomNavigation>\n    </AppBar>\n  );\n};\n\nexport const RootRoutes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path={RECIPES_PATH} component={RecipePage} />\n        <Route path={LIST_PATH} component={ListPage} />\n        <Route path={SETTINGS_PATH} component={SettingsPage} />\n        <Redirect from=\"/\" to={RECIPES_PATH} />\n      </Switch>\n      <BottomNav />\n    </Router>\n  );\n};\n","import React from \"react\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { Container, Box } from \"@material-ui/core\";\nimport { RootRoutes } from \"./routes\";\nimport { RecipeProvider } from \"./recipe/recipe-resource\";\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#00acc1\",\n      },\n      secondary: {\n        main: \"#00bfa5\",\n      },\n      type: \"dark\",\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <RecipeProvider>\n        <Container>\n          <Box mt={2} mb={8}>\n            <RootRoutes />\n          </Box>\n        </Container>\n      </RecipeProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}