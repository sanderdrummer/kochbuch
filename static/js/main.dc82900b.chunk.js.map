{"version":3,"sources":["common/fab.tsx","common/search-input.tsx","api.ts","recipe/recipe-resource.tsx","recipe/recipe-details.tsx","common/useLocalStorage.ts","list/list-hooks.tsx","plan/plan.tsx","recipe/recipe-list.tsx","routes-config.ts","recipe/recipe-page.tsx","list/list-form.tsx","list/list-page.tsx","routes.tsx","App.tsx","index.tsx"],"names":["fabStyles","makeStyles","theme","createStyles","fab","position","bottom","spacing","right","BottomRightFab","onClick","label","children","isLoading","styles","Fab","disabled","className","color","aria-label","useStyles","root","padding","display","alignItems","input","marginLeft","flex","iconButton","divider","height","margin","SearchInput","onSubmit","classes","React","useState","query","setQuery","useEffect","Paper","e","preventDefault","component","InputBase","value","onChange","target","placeholder","inputProps","IconButton","type","Divider","orientation","get","endpoint","a","options","method","fetch","then","res","json","queryClient","QueryClient","RecipeDetails","recipe","action","unfold","setUnfold","ListItem","selected","button","ListItemText","primary","title","Grow","in","mountOnEnter","unmountOnExit","Box","mt","Card","CardHeader","subheader","List","ingredients","map","ingredient","amount","name","CardContent","Typography","style","whiteSpace","description","getLocalStorageJson","key","localStorage","getItem","JSON","parse","saveLocalStorageJson","item","setItem","stringify","LIST_KEY","getList","list","basket","checkListItem","listItems","filter","listItem","push","unCheckListItem","addListItems","bulkList","clearList","listItemsCache","usePlans","initialValue","storageValue","setValue","useLocalStorage","plans","setPlans","completedPlans","Object","values","plan","isDone","openPlans","clearPlans","addRecipe","nextPlans","togglePlan","PlanView","variant","Button","length","justifyContent","items","reduce","concat","RecipeList","useQuery","data","recipes","isError","refetch","filtered","setFiltered","lowerCaseQuery","toLowerCase","includes","filterRecipes","Skeleton","data-testid","RECIPES_PATH","LIST_PATH","PLAN_PATH","RECIPE_DETAILS_PATH","RecipePage","exact","path","ListForm","onCompleted","window","id","setTimeout","clearTimeout","console","log","TextField","multiline","fullWidth","required","startIcon","Save","ClearListDialog","onClearList","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","DialogTitle","DialogActions","autoFocus","CardList","onSelect","isChecked","headline","Checkbox","checked","ListPage","setList","fetchList","result","useListItems","alignContent","mb","Drawer","anchor","Add","nav","marginTop","top","BottomNav","navigate","useHistory","location","useLocation","AppBar","BottomNavigation","pathname","showLabels","BottomNavigationAction","icon","MenuBook","PlaylistAddCheck","RootRoutes","from","to","App","createMuiTheme","palette","main","secondary","ThemeProvider","CssBaseline","QueryClientProvider","client","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc82900b.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Fab, Theme } from \"@material-ui/core\";\n\nconst fabStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      position: \"fixed\",\n      bottom: theme.spacing(8),\n\n      right: theme.spacing(2),\n    },\n  })\n);\n\nexport const BottomRightFab: React.FC<{\n  onClick: (e: any) => void;\n  label: string;\n  isLoading?: boolean;\n  children: any;\n}> = ({ onClick, label, children, isLoading }) => {\n  const styles = fabStyles();\n  return (\n    <Fab\n      onClick={onClick}\n      disabled={isLoading}\n      className={styles.fab}\n      color=\"primary\"\n      aria-label={label}\n    >\n      {children}\n    </Fab>\n  );\n};\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Clear from \"@material-ui/icons/Clear\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  })\n);\n\nexport const SearchInput: React.FC<{\n  onSubmit(query: string): void;\n  label: string;\n}> = ({ onSubmit, label }) => {\n  const classes = useStyles();\n  const [query, setQuery] = React.useState(\"\");\n  const reset = () => {\n    setQuery(\"\");\n    onSubmit(\"\");\n  };\n  React.useEffect(() => {\n    onSubmit(query);\n  }, [onSubmit, query]);\n  return (\n    <Paper\n      onSubmit={(e) => {\n        e.preventDefault();\n        onSubmit(query);\n      }}\n      component=\"form\"\n      className={classes.root}\n    >\n      <InputBase\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        className={classes.input}\n        placeholder={label}\n        inputProps={{ \"aria-label\": label }}\n      />\n      <IconButton\n        type=\"button\"\n        color=\"secondary\"\n        className={classes.iconButton}\n        aria-label=\"Suche löschen\"\n        onClick={reset}\n      >\n        <Clear />\n      </IconButton>\n      <Divider className={classes.divider} orientation=\"vertical\" />\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"suchen\"\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n};\n","export async function post<T = any>(endpoint: string, params: any): Promise<T> {\n  const options: RequestInit = {\n    method: \"POST\",\n    body: JSON.stringify(params),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetch(endpoint, options).then(async (res) => res.json());\n}\n\nexport async function get<T = any>(endpoint: string): Promise<T> {\n  const options: RequestInit = {\n    method: \"GET\",\n  };\n  return fetch(endpoint, options).then((res) => {\n    return res.json();\n  });\n}\n","import { useQuery, QueryClient } from \"react-query\";\nimport { get } from \"../api\";\n\nexport const queryClient = new QueryClient();\n\nexport const mockResponse: RecipeResponse = [\n  {\n    title: \"recipe2\",\n    ingredients: [\n      {\n        name: \"flour\",\n        amount: \"2\",\n      },\n    ],\n    description: \"describe\",\n  },\n];\n\ntype RecipeResponse = Recipe[];\n\nexport type Recipe = {\n  title: string;\n  ingredients: Ingredient[];\n  description: string;\n};\n\ninterface Ingredient {\n  amount: string;\n  name: string;\n}\n\nexport const useRecipes = () => {\n  return useQuery<RecipeResponse>(\"recipes\", async () => {\n    const data = await get(\n      \"https://raw.githubusercontent.com/sanderdrummer/recipes-md/master/parsed-recipes.json\"\n    );\n    return data ?? [];\n  });\n};\n","import React from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { MenuBook } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Typography,\n  CardContent,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  Grow,\n} from \"@material-ui/core\";\n\nimport { Recipe } from \"./recipe-resource\";\n\nexport const RecipeDetails: React.FC<{\n  recipe: Recipe;\n  action?: React.ReactNode;\n}> = ({ recipe, action }) => {\n  const [unfold, setUnfold] = React.useState(false);\n\n  return (\n    <>\n      <ListItem\n        selected={unfold}\n        button\n        onClick={() => setUnfold((unfold) => !unfold)}\n        key={recipe.title}\n      >\n        <ListItemText primary={recipe.title} />\n      </ListItem>\n      <Divider />\n      <Grow in={unfold} mountOnEnter unmountOnExit>\n        <Box mt={3}>\n          <Card>\n            <CardHeader title={recipe?.title} action={action}></CardHeader>\n          </Card>\n\n          <Box mt={3}>\n            <Card>\n              <CardHeader subheader=\"Zutaten\"></CardHeader>\n              <List>\n                {recipe?.ingredients.map((ingredient) => (\n                  <ListItem key={ingredient.name}>\n                    {ingredient.amount} {ingredient.name}\n                  </ListItem>\n                ))}\n              </List>\n            </Card>\n          </Box>\n          <Box mt={3}>\n            <Card>\n              <CardHeader subheader=\"Zubereitung\"></CardHeader>\n              <CardContent>\n                <Typography style={{ whiteSpace: \"pre-wrap\" }}>\n                  {recipe?.description}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Box>\n        </Box>\n      </Grow>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nexport const getLocalStorageJson = (key: string) => {\n  const json = localStorage.getItem(key);\n  if (json) {\n    return JSON.parse(json);\n  }\n  return undefined;\n};\nexport const saveLocalStorageJson = (key: string, item: any) => {\n  localStorage.setItem(key, JSON.stringify(item));\n};\n\nexport const useLocalStorage = <T>(\n  key: string,\n  initialValue: T\n): [T, (value: T) => void] => {\n  const storageValue = getLocalStorageJson(key);\n  const [value, setValue] = useState<T>(storageValue ?? initialValue);\n\n  useEffect(() => {\n    saveLocalStorageJson(key, value);\n  }, [key, value]);\n\n  return [value, setValue];\n};\n","import React from \"react\";\nimport {\n  getLocalStorageJson,\n  saveLocalStorageJson,\n} from \"../common/useLocalStorage\";\n\ntype ListItems = {\n  list: string[];\n  basket: string[];\n};\nconst LIST_KEY = \"LIST_KEY\";\n\nexport const getList = (): ListItems => {\n  const list = getLocalStorageJson(LIST_KEY);\n  return list ? list : { basket: [], list: [] };\n};\n\nexport const addListItem = (item: string) => {\n  const listItems = getList();\n  listItems.list.push(item);\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const checkListItem = async (item: string) => {\n  const listItems = getList();\n  listItems.list = listItems.list.filter((listItem) => listItem !== item);\n  listItems.basket.push(item);\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const unCheckListItem = (item: string) => {\n  const listItems = getList();\n  listItems.basket = listItems.basket.filter((listItem) => listItem !== item);\n  listItems.list.push(item);\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const addListItems = (bulkList: string[]) => {\n  const listItems = getList();\n  listItems.list = [...listItems.list, ...bulkList];\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const clearList = () => {\n  const listItems = getList();\n  listItems.basket = [];\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nlet listItemsCache: {\n  list: string[];\n  basket: string[];\n} = { list: [], basket: [] };\n\nexport const useListItems = () => {\n  const [list, setList] = React.useState<{\n    list: string[];\n    basket: string[];\n  }>(listItemsCache);\n\n  const fetchList = () => {\n    const result = getList();\n    listItemsCache = result;\n    setList(result);\n  };\n\n  return {\n    list,\n    fetchList,\n  };\n};\n","import { Box, Button, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useLocalStorage } from \"../common/useLocalStorage\";\nimport { addListItems } from \"../list/list-hooks\";\nimport { RecipeDetails } from \"../recipe/recipe-details\";\nimport { Recipe } from \"../recipe/recipe-resource\";\n\ninterface Plan {\n  isDone: boolean;\n  recipe: Recipe;\n}\n\nexport const usePlans = () => {\n  const [plans, setPlans] = useLocalStorage<Record<string, Plan>>(\"plan\", {});\n\n  const completedPlans = Object.values(plans).filter((plan) => plan.isDone);\n  const openPlans = Object.values(plans).filter((plan) => !plan.isDone);\n\n  const togglePlan = (plan: Plan) => {\n    setPlans({\n      ...plans,\n      [plan.recipe.title]: {\n        ...plan,\n        isDone: !plan.isDone,\n      },\n    });\n  };\n\n  const clearPlans = () => {\n    setPlans({});\n  };\n\n  const addRecipe = (recipe: Recipe) => {\n    const nextPlans = {\n      ...plans,\n      [recipe.title]: {\n        isDone: false,\n        recipe: recipe,\n      },\n    };\n    setPlans(nextPlans);\n  };\n\n  return { completedPlans, openPlans, clearPlans, addRecipe, togglePlan };\n};\n\nexport const PlanView = () => {\n  const { openPlans, completedPlans, clearPlans, togglePlan } = usePlans();\n  return (\n    <>\n      <Typography variant=\"h5\">Wir kochen</Typography>\n      {openPlans.map((plan) => (\n        <>\n          <RecipeDetails\n            key={plan.recipe.title}\n            recipe={plan.recipe}\n            action={\n              <Button\n                onClick={() => {\n                  togglePlan(plan);\n                }}\n              >\n                Fertig gekocht\n              </Button>\n            }\n          ></RecipeDetails>\n        </>\n      ))}\n\n      {completedPlans.length > 0 && (\n        <Typography variant=\"h5\">Schon gekocht</Typography>\n      )}\n      {completedPlans.map((plan) => (\n        <>\n          <RecipeDetails\n            key={plan.recipe.title}\n            recipe={plan.recipe}\n          ></RecipeDetails>\n        </>\n      ))}\n\n      <Box mt=\"3\" display=\"flex\" justifyContent=\"space-between\">\n        <Button\n          onClick={() => {\n            const items = openPlans.reduce<Recipe[\"ingredients\"]>(\n              (items, plan) => {\n                return items.concat(plan.recipe.ingredients);\n              },\n              []\n            );\n            addListItems(items.map((item) => `${item.amount} ${item.name}`));\n          }}\n          color=\"primary\"\n        >\n          Plan zur Einkaufsliste\n        </Button>\n        <Button onClick={clearPlans}>Plan löschen</Button>\n      </Box>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { Skeleton } from \"@material-ui/lab\";\nimport { List, Button, Box } from \"@material-ui/core\";\n\nimport { SearchInput } from \"../common\";\nimport { Recipe, useRecipes } from \"./recipe-resource\";\nimport { RecipeDetails } from \"./recipe-details\";\nimport { usePlans } from \"../plan/plan\";\n\nexport const ListLoader: React.FC = () => {\n  return (\n    <>\n      <Skeleton height=\"4rem\" />\n      <Skeleton height=\"4rem\" />\n    </>\n  );\n};\n\nconst filterRecipes = (\n  recipes: Recipe[] = [],\n  query: string = \"\"\n): Recipe[] => {\n  if (!query) {\n    return recipes || [];\n  }\n  const lowerCaseQuery = query.toLowerCase();\n  return recipes.filter((recipe) => {\n    return recipe.title.toLowerCase().includes(lowerCaseQuery);\n  });\n};\n\nexport const RecipeList = () => {\n  const { data: recipes, isLoading, isError, refetch } = useRecipes();\n\n  const [query, setQuery] = React.useState(\"\");\n  const [filtered, setFiltered] = React.useState<Recipe[]>(recipes ?? []);\n  React.useEffect(() => {\n    setFiltered(filterRecipes(recipes, query));\n  }, [query, recipes]);\n  const { addRecipe } = usePlans();\n\n  return (\n    <>\n      <SearchInput label=\"was kochen ?\" onSubmit={setQuery} />\n      <List>\n        {filtered.map((recipe) => (\n          <RecipeDetails\n            key={recipe.title}\n            recipe={recipe}\n            action={\n              <Button onClick={() => addRecipe(recipe)}>zum Koch Plan</Button>\n            }\n          />\n        ))}\n      </List>\n      {isLoading && <Skeleton aria-label=\"loading\" data-testid=\"loader\" />}\n      {isError && (\n        <Box>\n          rezepte konnten nicht geladen werden\n          <Button onClick={() => refetch()}>nochmal versuchen</Button>\n        </Box>\n      )}\n    </>\n  );\n};\n","export const BASE_PATH = \"\";\nexport const RECIPES_PATH = BASE_PATH + \"/rezepte\";\nexport const LIST_PATH = BASE_PATH + \"/einkaufliste\";\nexport const PLAN_PATH = BASE_PATH + \"/plan\";\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { RecipeList } from \"./recipe-list\";\nimport { RecipeDetails } from \"./recipe-details\";\n\nimport { RECIPES_PATH } from \"../routes-config\";\n\nexport const ADD_RECIPE_PATH = RECIPES_PATH + \"/neues-rezept\";\nexport const RECIPE_DETAILS_PATH = RECIPES_PATH + \"/:id\";\nexport const RECIPE_DETAILS_EDIT_PATH = RECIPE_DETAILS_PATH + \"/bearbeiten\";\n\nexport const getRecipeDetailPath = (title: string) =>\n  RECIPES_PATH + \"/\" + title;\n\nexport const RecipePage = () => {\n  return (\n    <Switch>\n      <Route exact path={RECIPES_PATH} component={RecipeList} />\n\n      <Route exact path={RECIPE_DETAILS_PATH} component={RecipeDetails} />\n    </Switch>\n  );\n};\n","import React from \"react\";\n\n// @ts-ignore\nimport { Save } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { addListItems } from \"./list-hooks\";\n\nconst key = \"shoppingList\";\nexport const ListForm: React.FC<{ onCompleted(): void }> = ({\n  onCompleted,\n}) => {\n  const [value, setValue] = React.useState(\"\");\n  React.useEffect(() => {\n    const list = window.localStorage.getItem(key) || \"\";\n    if (typeof list === \"string\") {\n      setValue(list);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const id = setTimeout(() => {\n      window.localStorage.setItem(key, value);\n    }, 100);\n    return () => {\n      clearTimeout(id);\n    };\n  }, [value]);\n\n  return (\n    <Box>\n      <Card>\n        <CardHeader title=\"Einkaufsliste erweitern\" />\n        <CardContent>\n          <form\n            onSubmit={async (e) => {\n              e.preventDefault();\n              try {\n                addListItems([value]);\n                setValue(\"\");\n                onCompleted();\n              } catch (e) {\n                console.log(e);\n              }\n            }}\n          >\n            <TextField\n              value={value}\n              onChange={(e) => setValue(e.target.value)}\n              multiline\n              fullWidth\n              name=\"listItems\"\n              label=\"Einkaufsliste\"\n              required\n            />\n            <Button type=\"submit\" startIcon={<Save />}>\n              speichern\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport {\n  useListItems,\n  clearList,\n  checkListItem,\n  unCheckListItem,\n} from \"./list-hooks\";\nimport {\n  ListItem,\n  ListItemText,\n  Drawer,\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  Checkbox,\n  CardHeader,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\n\nimport { BottomRightFab } from \"../common\";\n\nimport { ListForm } from \"./list-form\";\n\nconst ClearListDialog: React.FC<{ onClearList(): void }> = ({\n  onClearList,\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n\n  return (\n    <>\n      <Button onClick={handleOpen}>Liste löschen</Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"clear-list-dialog-title\"\n      >\n        <DialogTitle id=\"clear-list-dialog-title\">\n          Die Einkaufsliste leeren ?\n        </DialogTitle>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            nein\n          </Button>\n          <Button\n            onClick={async () => {\n              try {\n                clearList();\n                onClearList();\n                handleClose();\n              } catch (e) {\n                console.log(e);\n              }\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            ja\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst CardList: React.FC<{\n  items: string[];\n  onSelect(item: string): void;\n  isChecked: boolean;\n  headline: string;\n}> = ({ items, onSelect, isChecked, headline }) => {\n  if (items.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader subheader={headline}></CardHeader>\n      <CardContent>\n        {items.map((item) => (\n          <ListItem\n            button\n            onClick={() => {\n              onSelect(item);\n            }}\n            key={item}\n          >\n            <ListItemText>{item}</ListItemText>\n            <Checkbox\n              checked={isChecked}\n              inputProps={{\n                \"aria-label\": `${item} ist im Einkaufswagen`,\n              }}\n            />\n          </ListItem>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const ListPage = () => {\n  const { list, fetchList } = useListItems();\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    fetchList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {list.list.length === 0 && list.basket.length === 0 && (\n        <Box display=\"flex\" alignContent=\"center\" justifyContent=\"center\">\n          Du hast noch nichts auf der Einkaufsliste\n        </Box>\n      )}\n      <CardList\n        items={list.list}\n        isChecked={false}\n        headline=\"In den Einkaufswagen\"\n        onSelect={async (item) => {\n          checkListItem(item);\n          fetchList();\n        }}\n      />\n      <Box mt={3} mb={3}></Box>\n      <CardList\n        items={list.basket}\n        isChecked={true}\n        headline=\"Schon dabei\"\n        onSelect={async (item) => {\n          unCheckListItem(item);\n          fetchList();\n        }}\n      />\n\n      {list.basket.length > 0 && (\n        <Box mt={4}>\n          <ClearListDialog onClearList={fetchList} />\n        </Box>\n      )}\n      <Drawer anchor=\"top\" open={open} onClose={() => setOpen(false)}>\n        <ListForm\n          onCompleted={() => {\n            setOpen(false);\n            fetchList();\n          }}\n        />\n      </Drawer>\n      <BottomRightFab onClick={() => setOpen(true)} label=\"brauche sachen\">\n        <Add></Add>\n      </BottomRightFab>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useLocation,\n  useHistory,\n} from \"react-router-dom\";\n\nimport { RecipePage } from \"./recipe\";\nimport { ListPage } from \"./list\";\n\nimport {\n  FormatListBulleted,\n  MenuBook,\n  List,\n  PlaylistAddCheck,\n} from \"@material-ui/icons\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  AppBar,\n  BottomNavigation,\n  BottomNavigationAction,\n} from \"@material-ui/core\";\nimport { RECIPES_PATH, LIST_PATH, PLAN_PATH } from \"./routes-config\";\nimport { PlanView } from \"./plan/plan\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    nav: {\n      marginTop: theme.spacing(8),\n      bottom: 0,\n      top: \"auto\",\n    },\n  })\n);\n\nconst BottomNav = () => {\n  const navigate = useHistory();\n  const styles = useStyles();\n  const location = useLocation();\n\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={styles.nav}>\n      <BottomNavigation value={location.pathname} showLabels>\n        <BottomNavigationAction\n          onClick={() => navigate.push(RECIPES_PATH)}\n          value={RECIPES_PATH}\n          label=\"Rezepte\"\n          icon={<MenuBook />}\n        />\n        <BottomNavigationAction\n          onClick={() => navigate.push(PLAN_PATH)}\n          value={PLAN_PATH}\n          label=\"Plan\"\n          icon={<PlaylistAddCheck />}\n        />\n        <BottomNavigationAction\n          onClick={() => navigate.push(LIST_PATH)}\n          value={LIST_PATH}\n          label=\"Liste\"\n          icon={<List />}\n        />\n      </BottomNavigation>\n    </AppBar>\n  );\n};\n\nexport const RootRoutes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path={RECIPES_PATH} component={RecipePage} />\n        <Route path={LIST_PATH} component={ListPage} />\n        <Route path={PLAN_PATH} component={PlanView} />\n        <Redirect from=\"/\" to={RECIPES_PATH} />\n      </Switch>\n      <BottomNav />\n    </Router>\n  );\n};\n","import React from \"react\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { Container, Box } from \"@material-ui/core\";\nimport { RootRoutes } from \"./routes\";\nimport { queryClient } from \"./recipe/recipe-resource\";\nimport { QueryClientProvider } from \"react-query\";\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#00acc1\",\n      },\n      secondary: {\n        main: \"#00bfa5\",\n      },\n      type: \"dark\",\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <QueryClientProvider client={queryClient}>\n        <Container>\n          <Box mt={2} mb={8}>\n            <RootRoutes />\n          </Box>\n        </Container>\n      </QueryClientProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}