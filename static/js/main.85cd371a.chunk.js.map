{"version":3,"sources":["common/fab.tsx","common/search-input.tsx","api.ts","recipe/recipe-resource.tsx","recipe/recipe-list.tsx","routes-config.ts","list/list-hooks.tsx","recipe/recipe-details.tsx","recipe/recipe-page.tsx","list/list-form.tsx","list/list-page.tsx","routes.tsx","App.tsx","index.tsx"],"names":["fabStyles","makeStyles","theme","createStyles","fab","position","bottom","spacing","right","BottomRightFab","onClick","label","children","isLoading","styles","Fab","disabled","className","color","aria-label","useStyles","root","padding","display","alignItems","input","marginLeft","flex","iconButton","divider","height","margin","SearchInput","onSubmit","classes","React","useState","query","setQuery","useEffect","Paper","e","preventDefault","component","InputBase","value","onChange","target","placeholder","inputProps","IconButton","type","Divider","orientation","get","endpoint","a","options","method","fetch","then","res","json","queryClient","QueryClient","useRecipes","useQuery","data","RecipeList","navigate","useHistory","recipes","isError","refetch","error","isLoadingError","filtered","setFiltered","lowerCaseQuery","toLowerCase","filter","recipe","title","includes","filterRecipes","List","map","ListItem","button","push","getRecipeDetailPath","ListItemText","primary","Skeleton","data-testid","Box","Button","RECIPES_PATH","LIST_PATH","LIST_KEY","saveLocalStorageJson","key","item","localStorage","setItem","JSON","stringify","getList","list","getItem","parse","getLocalStorageJson","basket","checkListItem","listItems","listItem","unCheckListItem","addListItems","bulkList","clearList","listItemsCache","RecipeDetails","id","useParams","find","console","log","useRecipeByTitle","decodeURIComponent","mt","Card","CardHeader","action","startIcon","MenuBook","ingredients","amount","name","subheader","ingredient","CardContent","Typography","style","whiteSpace","description","RECIPE_DETAILS_PATH","RecipePage","exact","path","ListForm","onCompleted","setValue","window","setTimeout","clearTimeout","TextField","multiline","fullWidth","required","Save","ClearListDialog","onClearList","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","DialogTitle","DialogActions","autoFocus","CardList","items","onSelect","isChecked","headline","length","Checkbox","checked","ListPage","setList","fetchList","result","useListItems","alignContent","justifyContent","mb","Drawer","anchor","Add","nav","marginTop","top","BottomNav","location","useLocation","AppBar","BottomNavigation","pathname","showLabels","BottomNavigationAction","icon","FormatListBulleted","RootRoutes","from","to","App","createMuiTheme","palette","main","secondary","ThemeProvider","CssBaseline","QueryClientProvider","client","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85cd371a.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Fab, Theme } from \"@material-ui/core\";\n\nconst fabStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      position: \"fixed\",\n      bottom: theme.spacing(8),\n\n      right: theme.spacing(2),\n    },\n  })\n);\n\nexport const BottomRightFab: React.FC<{\n  onClick: (e: any) => void;\n  label: string;\n  isLoading?: boolean;\n  children: any;\n}> = ({ onClick, label, children, isLoading }) => {\n  const styles = fabStyles();\n  return (\n    <Fab\n      onClick={onClick}\n      disabled={isLoading}\n      className={styles.fab}\n      color=\"primary\"\n      aria-label={label}\n    >\n      {children}\n    </Fab>\n  );\n};\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Clear from \"@material-ui/icons/Clear\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  })\n);\n\nexport const SearchInput: React.FC<{\n  onSubmit(query: string): void;\n  label: string;\n}> = ({ onSubmit, label }) => {\n  const classes = useStyles();\n  const [query, setQuery] = React.useState(\"\");\n  const reset = () => {\n    setQuery(\"\");\n    onSubmit(\"\");\n  };\n  React.useEffect(() => {\n    onSubmit(query);\n  }, [onSubmit, query]);\n  return (\n    <Paper\n      onSubmit={(e) => {\n        e.preventDefault();\n        onSubmit(query);\n      }}\n      component=\"form\"\n      className={classes.root}\n    >\n      <InputBase\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        className={classes.input}\n        placeholder={label}\n        inputProps={{ \"aria-label\": label }}\n      />\n      <IconButton\n        type=\"button\"\n        color=\"secondary\"\n        className={classes.iconButton}\n        aria-label=\"Suche löschen\"\n        onClick={reset}\n      >\n        <Clear />\n      </IconButton>\n      <Divider className={classes.divider} orientation=\"vertical\" />\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"suchen\"\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n};\n","export async function post<T = any>(endpoint: string, params: any): Promise<T> {\n  const options: RequestInit = {\n    method: \"POST\",\n    body: JSON.stringify(params),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetch(endpoint, options).then(async (res) => res.json());\n}\n\nexport async function get<T = any>(endpoint: string): Promise<T> {\n  const options: RequestInit = {\n    method: \"GET\",\n  };\n  return fetch(endpoint, options).then((res) => {\n    return res.json();\n  });\n}\n","import { useQuery, QueryClient } from \"react-query\";\nimport { get } from \"../api\";\n\nexport const queryClient = new QueryClient();\n\nexport const mockResponse: RecipeResponse = [\n  {\n    title: \"recipe2\",\n    ingredients: [\n      {\n        name: \"flour\",\n        amount: \"2\",\n      },\n    ],\n    description: \"describe\",\n  },\n];\n\ntype RecipeResponse = Recipe[];\n\nexport type Recipe = {\n  title: string;\n  ingredients: Ingredient[];\n  description: string;\n};\n\ninterface Ingredient {\n  amount: string;\n  name: string;\n}\n\nexport const useRecipeByTitle = (title: string) => {\n  const { data: recipes } = useRecipes();\n  const recipe = recipes?.find((recipe) => recipe.title === title);\n\n  console.log(title, recipe);\n  return recipe;\n};\n\nexport const useRecipes = () => {\n  return useQuery<RecipeResponse>(\"recipes\", async () => {\n    const data = await get(\n      \"https://raw.githubusercontent.com/sanderdrummer/recipes-md/master/parsed-recipes.json\"\n    );\n    return data ?? [];\n  });\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport { Skeleton } from \"@material-ui/lab\";\nimport { List, ListItem, ListItemText, Button, Box } from \"@material-ui/core\";\n\nimport { SearchInput } from \"../common\";\nimport { getRecipeDetailPath } from \".\";\nimport { Recipe, useRecipes } from \"./recipe-resource\";\n\nexport const ListLoader: React.FC = () => {\n  return (\n    <>\n      <Skeleton height=\"4rem\" />\n      <Skeleton height=\"4rem\" />\n    </>\n  );\n};\n\nconst filterRecipes = (\n  recipes: Recipe[] = [],\n  query: string = \"\"\n): Recipe[] => {\n  if (!query) {\n    return recipes || [];\n  }\n  const lowerCaseQuery = query.toLowerCase();\n  return recipes.filter((recipe) => {\n    return recipe.title.toLowerCase().includes(lowerCaseQuery);\n  });\n};\n\nexport const RecipeList = () => {\n  const navigate = useHistory();\n  const {\n    data: recipes,\n    isLoading,\n    isError,\n    error,\n    isLoadingError,\n    refetch,\n  } = useRecipes();\n\n  const [query, setQuery] = React.useState(\"\");\n  const [filtered, setFiltered] = React.useState<Recipe[]>(recipes ?? []);\n  React.useEffect(() => {\n    setFiltered(filterRecipes(recipes, query));\n  }, [query, recipes]);\n\n  return (\n    <>\n      <SearchInput label=\"was kochen ?\" onSubmit={setQuery} />\n      <List>\n        {filtered.map((recipe) => (\n          <ListItem\n            button\n            onClick={() => navigate.push(getRecipeDetailPath(recipe.title))}\n            key={recipe.title}\n          >\n            <ListItemText primary={recipe.title} />\n          </ListItem>\n        ))}\n      </List>\n      {isLoading && <Skeleton aria-label=\"loading\" data-testid=\"loader\" />}\n      {isError && (\n        <Box>\n          rezepte konnten nicht geladen werden\n          <Button onClick={() => refetch()}>nochmal versuchen</Button>\n        </Box>\n      )}\n    </>\n  );\n};\n","export const BASE_PATH = \"\";\nexport const RECIPES_PATH = BASE_PATH + \"/rezepte\";\nexport const LIST_PATH = BASE_PATH + \"/einkaufliste\";\n","import React from \"react\";\n\ntype ListItems = {\n  list: string[];\n  basket: string[];\n};\nconst LIST_KEY = \"LIST_KEY\";\nconst getLocalStorageJson = (key: string) => {\n  const json = localStorage.getItem(key);\n  if (json) {\n    return JSON.parse(json);\n  }\n  return undefined;\n};\nconst saveLocalStorageJson = (key: string, item: any) => {\n  localStorage.setItem(key, JSON.stringify(item));\n};\n\nexport const getList = (): ListItems => {\n  const list = getLocalStorageJson(LIST_KEY);\n  return list ? list : { basket: [], list: [] };\n};\n\nexport const addListItem = (item: string) => {\n  const listItems = getList();\n  listItems.list.push(item);\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const checkListItem = async (item: string) => {\n  const listItems = getList();\n  listItems.list = listItems.list.filter((listItem) => listItem !== item);\n  listItems.basket.push(item);\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const unCheckListItem = (item: string) => {\n  const listItems = getList();\n  listItems.basket = listItems.basket.filter((listItem) => listItem !== item);\n  listItems.list.push(item);\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const addListItems = (bulkList: string[]) => {\n  const listItems = getList();\n  listItems.list = [...listItems.list, ...bulkList];\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const clearList = () => {\n  const listItems = getList();\n  listItems.basket = [];\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nlet listItemsCache: {\n  list: string[];\n  basket: string[];\n} = { list: [], basket: [] };\n\nexport const useListItems = () => {\n  const [list, setList] = React.useState<{\n    list: string[];\n    basket: string[];\n  }>(listItemsCache);\n\n  const fetchList = () => {\n    const result = getList();\n    listItemsCache = result;\n    setList(result);\n  };\n\n  return {\n    list,\n    fetchList,\n  };\n};\n","import React from \"react\";\n\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { MenuBook } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Typography,\n  CardContent,\n  Button,\n  List,\n  ListItem,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nimport { LIST_PATH } from \"../routes-config\";\nimport { useRecipeByTitle } from \"./recipe-resource\";\nimport { addListItems } from \"../list/list-hooks\";\n\nexport const RecipeDetails: React.FC = () => {\n  const navigate = useHistory();\n  const { id } = useParams<{ id: string }>();\n  const title = decodeURIComponent(id || \"\");\n  const recipe = useRecipeByTitle(title);\n\n  if (!recipe) {\n    return <Skeleton height=\"12rem\" />;\n  }\n\n  return (\n    <Box mt={3}>\n      <Card>\n        <CardHeader\n          title={recipe?.title}\n          action={\n            <Button\n              startIcon={<MenuBook />}\n              onClick={async () => {\n                addListItems(\n                  recipe?.ingredients.map(\n                    ({ amount, name }) => `${amount} ${name}`\n                  )\n                );\n                navigate.push(LIST_PATH);\n              }}\n            >\n              zur Einkaufsliste\n            </Button>\n          }\n        ></CardHeader>\n      </Card>\n\n      <Box mt={3}>\n        <Card>\n          <CardHeader subheader=\"Zutaten\"></CardHeader>\n          <List>\n            {recipe?.ingredients.map((ingredient) => (\n              <ListItem key={ingredient.name}>\n                {ingredient.amount} {ingredient.name}\n              </ListItem>\n            ))}\n          </List>\n        </Card>\n      </Box>\n      <Box mt={3}>\n        <Card>\n          <CardHeader subheader=\"Zubereitung\"></CardHeader>\n          <CardContent>\n            <Typography style={{ whiteSpace: \"pre-wrap\" }}>\n              {recipe?.description}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { RecipeList } from \"./recipe-list\";\nimport { RecipeDetails } from \"./recipe-details\";\n\nimport { RECIPES_PATH } from \"../routes-config\";\n\nexport const ADD_RECIPE_PATH = RECIPES_PATH + \"/neues-rezept\";\nexport const RECIPE_DETAILS_PATH = RECIPES_PATH + \"/:id\";\nexport const RECIPE_DETAILS_EDIT_PATH = RECIPE_DETAILS_PATH + \"/bearbeiten\";\n\nexport const getRecipeDetailPath = (title: string) =>\n  RECIPES_PATH + \"/\" + title;\n\nexport const RecipePage = () => {\n  return (\n    <Switch>\n      <Route exact path={RECIPES_PATH} component={RecipeList} />\n\n      <Route exact path={RECIPE_DETAILS_PATH} component={RecipeDetails} />\n    </Switch>\n  );\n};\n","import React from \"react\";\n\n// @ts-ignore\nimport { Save } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { addListItems } from \"./list-hooks\";\n\nconst key = \"shoppingList\";\nexport const ListForm: React.FC<{ onCompleted(): void }> = ({\n  onCompleted,\n}) => {\n  const [value, setValue] = React.useState(\"\");\n  React.useEffect(() => {\n    const list = window.localStorage.getItem(key) || \"\";\n    if (typeof list === \"string\") {\n      setValue(list);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const id = setTimeout(() => {\n      window.localStorage.setItem(key, value);\n    }, 100);\n    return () => {\n      clearTimeout(id);\n    };\n  }, [value]);\n\n  return (\n    <Box>\n      <Card>\n        <CardHeader title=\"Einkaufsliste erweitern\" />\n        <CardContent>\n          <form\n            onSubmit={async (e) => {\n              e.preventDefault();\n              try {\n                addListItems([value]);\n                setValue(\"\");\n                onCompleted();\n              } catch (e) {\n                console.log(e);\n              }\n            }}\n          >\n            <TextField\n              value={value}\n              onChange={(e) => setValue(e.target.value)}\n              multiline\n              fullWidth\n              name=\"listItems\"\n              label=\"Einkaufsliste\"\n              required\n            />\n            <Button type=\"submit\" startIcon={<Save />}>\n              speichern\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport {\n  useListItems,\n  clearList,\n  checkListItem,\n  unCheckListItem,\n} from \"./list-hooks\";\nimport {\n  ListItem,\n  ListItemText,\n  Drawer,\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  Checkbox,\n  CardHeader,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\n\nimport { BottomRightFab } from \"../common\";\n\nimport { ListForm } from \"./list-form\";\n\nconst ClearListDialog: React.FC<{ onClearList(): void }> = ({\n  onClearList,\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n\n  return (\n    <>\n      <Button onClick={handleOpen}>Liste löschen</Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"clear-list-dialog-title\"\n      >\n        <DialogTitle id=\"clear-list-dialog-title\">\n          Die Einkaufsliste leeren ?\n        </DialogTitle>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            nein\n          </Button>\n          <Button\n            onClick={async () => {\n              try {\n                clearList();\n                onClearList();\n                handleClose();\n              } catch (e) {\n                console.log(e);\n              }\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            ja\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst CardList: React.FC<{\n  items: string[];\n  onSelect(item: string): void;\n  isChecked: boolean;\n  headline: string;\n}> = ({ items, onSelect, isChecked, headline }) => {\n  if (items.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader subheader={headline}></CardHeader>\n      <CardContent>\n        {items.map((item) => (\n          <ListItem\n            button\n            onClick={() => {\n              onSelect(item);\n            }}\n            key={item}\n          >\n            <ListItemText>{item}</ListItemText>\n            <Checkbox\n              checked={isChecked}\n              inputProps={{\n                \"aria-label\": `${item} ist im Einkaufswagen`,\n              }}\n            />\n          </ListItem>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const ListPage = () => {\n  const { list, fetchList } = useListItems();\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    fetchList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {list.list.length === 0 && list.basket.length === 0 && (\n        <Box display=\"flex\" alignContent=\"center\" justifyContent=\"center\">\n          Du hast noch nichts auf der Einkaufsliste\n        </Box>\n      )}\n      <CardList\n        items={list.list}\n        isChecked={false}\n        headline=\"In den Einkaufswagen\"\n        onSelect={async (item) => {\n          checkListItem(item);\n          fetchList();\n        }}\n      />\n      <Box mt={3} mb={3}></Box>\n      <CardList\n        items={list.basket}\n        isChecked={true}\n        headline=\"Schon dabei\"\n        onSelect={async (item) => {\n          unCheckListItem(item);\n          fetchList();\n        }}\n      />\n\n      {list.basket.length > 0 && (\n        <Box mt={4}>\n          <ClearListDialog onClearList={fetchList} />\n        </Box>\n      )}\n      <Drawer anchor=\"top\" open={open} onClose={() => setOpen(false)}>\n        <ListForm\n          onCompleted={() => {\n            setOpen(false);\n            fetchList();\n          }}\n        />\n      </Drawer>\n      <BottomRightFab onClick={() => setOpen(true)} label=\"brauche sachen\">\n        <Add></Add>\n      </BottomRightFab>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useLocation,\n  useHistory,\n} from \"react-router-dom\";\n\nimport { RecipePage } from \"./recipe\";\nimport { ListPage } from \"./list\";\n\nimport { FormatListBulleted, MenuBook } from \"@material-ui/icons\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  AppBar,\n  BottomNavigation,\n  BottomNavigationAction,\n} from \"@material-ui/core\";\nimport { RECIPES_PATH, LIST_PATH } from \"./routes-config\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    nav: {\n      marginTop: theme.spacing(8),\n      bottom: 0,\n      top: \"auto\",\n    },\n  })\n);\n\nconst BottomNav = () => {\n  const navigate = useHistory();\n  const styles = useStyles();\n  const location = useLocation();\n\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={styles.nav}>\n      <BottomNavigation value={location.pathname} showLabels>\n        <BottomNavigationAction\n          onClick={() => navigate.push(RECIPES_PATH)}\n          value={RECIPES_PATH}\n          label=\"Rezepte\"\n          icon={<FormatListBulleted />}\n        />\n        <BottomNavigationAction\n          onClick={() => navigate.push(LIST_PATH)}\n          value={LIST_PATH}\n          label=\"Liste\"\n          icon={<MenuBook />}\n        />\n      </BottomNavigation>\n    </AppBar>\n  );\n};\n\nexport const RootRoutes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path={RECIPES_PATH} component={RecipePage} />\n        <Route path={LIST_PATH} component={ListPage} />\n        <Redirect from=\"/\" to={RECIPES_PATH} />\n      </Switch>\n      <BottomNav />\n    </Router>\n  );\n};\n","import React from \"react\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { Container, Box } from \"@material-ui/core\";\nimport { RootRoutes } from \"./routes\";\nimport { queryClient } from \"./recipe/recipe-resource\";\nimport { QueryClientProvider } from \"react-query\";\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#00acc1\",\n      },\n      secondary: {\n        main: \"#00bfa5\",\n      },\n      type: \"dark\",\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <QueryClientProvider client={queryClient}>\n        <Container>\n          <Box mt={2} mb={8}>\n            <RootRoutes />\n          </Box>\n        </Container>\n      </QueryClientProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}