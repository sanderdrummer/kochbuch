{"version":3,"sources":["common/fab.tsx","common/search-input.tsx","api.ts","recipe/recipe-resource.tsx","recipe/recipe-list.tsx","list/list-hooks.tsx","recipe/recipe-details.tsx","routes-config.ts","recipe/recipe-page.tsx","list/list-form.tsx","list/list-page.tsx","routes.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["fabStyles","makeStyles","theme","createStyles","fab","position","bottom","spacing","right","BottomRightFab","onClick","label","children","isLoading","styles","Fab","disabled","className","color","aria-label","useStyles","root","padding","display","alignItems","input","marginLeft","flex","iconButton","divider","height","margin","SearchInput","onSubmit","classes","React","useState","query","setQuery","useEffect","Paper","e","preventDefault","component","InputBase","value","onChange","target","placeholder","inputProps","IconButton","type","Divider","orientation","get","endpoint","a","options","method","fetch","then","res","json","initialState","tags","recipes","hasError","recipeReducer","state","action","recipeResponse","reduce","recipe","title","allRecipes","normalizeResponse","data","nextState","RecipeDispatchContext","createContext","RecipeContext","RecipeProvider","useReducer","dispatch","fetchRecipes","Provider","useRecipeState","useContext","RecipeList","navigate","useHistory","Object","values","filtered","setFiltered","lowerCaseQuery","toLowerCase","filter","includes","filterRecipes","List","map","ListItem","button","push","getRecipeDetailPath","key","ListItemText","primary","Skeleton","data-testid","Box","Button","ADD_RECIPE_PATH","Add","saveLocalStorageJson","item","localStorage","setItem","JSON","stringify","getList","list","getItem","parse","getLocalStorageJson","basket","checkListItem","listItems","listItem","unCheckListItem","addListItems","bulkList","clearList","listItemsCache","RecipeDetails","id","useParams","useRecipeByTitle","decodeURIComponent","mt","Card","CardHeader","startIcon","MenuBook","ingredients","subheader","ingredient","CardContent","Typography","style","whiteSpace","description","RECIPES_PATH","RecipePage","exact","path","ListForm","onCompleted","setValue","window","setTimeout","clearTimeout","console","log","TextField","multiline","fullWidth","name","required","Save","ClearListDialog","onClearList","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","DialogTitle","DialogActions","autoFocus","CardList","items","onSelect","isChecked","headline","length","Checkbox","checked","ListPage","setList","fetchList","result","useListItems","alignContent","justifyContent","mb","Drawer","anchor","nav","marginTop","top","BottomNav","location","useLocation","AppBar","BottomNavigation","pathname","showLabels","BottomNavigationAction","icon","FormatListBulleted","RootRoutes","from","to","App","createMuiTheme","palette","main","secondary","ThemeProvider","CssBaseline","Container","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.16e10af3.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Fab, Theme } from \"@material-ui/core\";\n\nconst fabStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      position: \"fixed\",\n      bottom: theme.spacing(8),\n\n      right: theme.spacing(2),\n    },\n  })\n);\n\nexport const BottomRightFab: React.FC<{\n  onClick: (e: any) => void;\n  label: string;\n  isLoading?: boolean;\n  children: any;\n}> = ({ onClick, label, children, isLoading }) => {\n  const styles = fabStyles();\n  return (\n    <Fab\n      onClick={onClick}\n      disabled={isLoading}\n      className={styles.fab}\n      color=\"primary\"\n      aria-label={label}\n    >\n      {children}\n    </Fab>\n  );\n};\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Clear from \"@material-ui/icons/Clear\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  })\n);\n\nexport const SearchInput: React.FC<{\n  onSubmit(query: string): void;\n  label: string;\n}> = ({ onSubmit, label }) => {\n  const classes = useStyles();\n  const [query, setQuery] = React.useState(\"\");\n  const reset = () => {\n    setQuery(\"\");\n    onSubmit(\"\");\n  };\n  React.useEffect(() => {\n    onSubmit(query);\n  }, [onSubmit, query]);\n  return (\n    <Paper\n      onSubmit={(e) => {\n        e.preventDefault();\n        onSubmit(query);\n      }}\n      component=\"form\"\n      className={classes.root}\n    >\n      <InputBase\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        className={classes.input}\n        placeholder={label}\n        inputProps={{ \"aria-label\": label }}\n      />\n      <IconButton\n        type=\"button\"\n        color=\"secondary\"\n        className={classes.iconButton}\n        aria-label=\"Suche löschen\"\n        onClick={reset}\n      >\n        <Clear />\n      </IconButton>\n      <Divider className={classes.divider} orientation=\"vertical\" />\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"suchen\"\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n};\n","export async function post<T = any>(endpoint: string, params: any): Promise<T> {\n  const options: RequestInit = {\n    method: \"POST\",\n    body: JSON.stringify(params),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return fetch(endpoint, options).then(async (res) => res.json());\n}\n\nexport async function get<T = any>(endpoint: string): Promise<T> {\n  const options: RequestInit = {\n    method: \"GET\",\n  };\n  return fetch(endpoint, options).then(async (res) => {\n    return res.json();\n  });\n}\n","import React from \"react\";\nimport { get } from \"../api\";\n\nexport const mockResponse: RecipeResponse = [\n  {\n    title: \"recipe2\",\n    ingredients: [\"flour\"],\n    description: \"describe\",\n  },\n];\n\ntype RecipeResponse = Recipe[];\n\nexport type Recipe = {\n  title: string;\n  ingredients: string[];\n  description: string;\n};\n\nexport type RecipeState = {\n  isLoading: boolean;\n  hasError: boolean;\n  recipes: Record<string, Recipe>;\n  tags: string[];\n};\n\nexport type RecipeAction =\n  | { type: \"START_LOADING\" }\n  | { type: \"HAS_ERROR\" }\n  | { type: \"DATA_FETCHED\"; data: RecipeResponse }\n  | { type: \"REMOVE_RECIPE\"; recipe: Recipe };\nconst initialState: RecipeState = {\n  isLoading: false,\n  tags: [],\n  recipes: {},\n  hasError: false,\n};\nconst normalizeResponse = (\n  state: RecipeState,\n  recipeResponse: RecipeResponse\n): RecipeState => {\n  const initialValue: Record<string, Recipe> = {};\n  const recipes = recipeResponse.reduce((recipes, recipe) => {\n    return { ...recipes, [recipe.title]: recipe };\n  }, initialValue);\n  const allRecipes = { ...state.recipes, ...recipes };\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    recipes: allRecipes,\n  };\n};\n\nconst recipeReducer = (state: RecipeState, action: RecipeAction) => {\n  switch (action.type) {\n    case \"DATA_FETCHED\":\n      return normalizeResponse(state, action.data);\n    case \"HAS_ERROR\":\n      return { ...state, hasError: true };\n    case \"START_LOADING\":\n      return { ...state, hasError: false, isLoading: true };\n    case \"REMOVE_RECIPE\":\n      const nextState = { ...state };\n      delete nextState.recipes[action.recipe.title];\n      return nextState;\n    default:\n      return state;\n  }\n};\ntype RecipeDispatch = React.Dispatch<RecipeAction>;\nconst RecipeDispatchContext = React.createContext<RecipeDispatch>(() => {});\nconst RecipeContext = React.createContext(initialState);\n\nexport const RecipeProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = React.useReducer(recipeReducer, initialState);\n\n  React.useEffect(() => {\n    fetchRecipes(dispatch);\n  }, []);\n\n  return (\n    <RecipeDispatchContext.Provider value={dispatch}>\n      <RecipeContext.Provider value={state}>{children}</RecipeContext.Provider>\n    </RecipeDispatchContext.Provider>\n  );\n};\n\nexport const useRecipeDispatch = () => {\n  return React.useContext(RecipeDispatchContext);\n};\n\nexport const useRecipeState = () => {\n  return React.useContext(RecipeContext);\n};\n\nexport const fetchRecipes = async (dispatch: RecipeDispatch) => {\n  dispatch({ type: \"START_LOADING\" });\n  try {\n    const data = await get(\n      \"https://raw.githubusercontent.com/sanderdrummer/recipes-md/master/parsed-recipes.json\"\n    );\n    dispatch({ type: \"DATA_FETCHED\", data });\n  } catch {\n    dispatch({ type: \"HAS_ERROR\" });\n  }\n};\n\nexport const useRecipeByTitle = (title: string) => {\n  const state = useRecipeState();\n  return state.recipes[title];\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport { Skeleton } from \"@material-ui/lab\";\nimport { Add } from \"@material-ui/icons\";\nimport { List, ListItem, ListItemText, Button, Box } from \"@material-ui/core\";\n\nimport { SearchInput, BottomRightFab } from \"../common\";\nimport { getRecipeDetailPath, ADD_RECIPE_PATH } from \".\";\nimport {\n  useRecipeDispatch,\n  useRecipeState,\n  fetchRecipes,\n  Recipe,\n} from \"./recipe-resource\";\n\nexport const ListLoader: React.FC = () => {\n  return (\n    <>\n      <Skeleton height=\"4rem\" />\n      <Skeleton height=\"4rem\" />\n    </>\n  );\n};\n\nconst filterRecipes = (\n  recipes: Recipe[] = [],\n  query: string = \"\"\n): Recipe[] => {\n  if (!query) {\n    return recipes || [];\n  }\n  const lowerCaseQuery = query.toLowerCase();\n  return recipes.filter((recipe) => {\n    return recipe.title.toLowerCase().includes(lowerCaseQuery);\n  });\n};\n\nexport const RecipeList = () => {\n  const navigate = useHistory();\n  const { recipes, hasError, isLoading } = useRecipeState();\n  const [query, setQuery] = React.useState(\"\");\n  const [filtered, setFiltered] = React.useState<Recipe[]>(\n    Object.values(recipes)\n  );\n  React.useEffect(() => {\n    setFiltered(filterRecipes(Object.values(recipes), query));\n  }, [query, recipes]);\n\n  const dispatch = useRecipeDispatch();\n\n  return (\n    <>\n      <SearchInput label=\"was kochen ?\" onSubmit={setQuery} />\n      <List>\n        {filtered.map((recipe) => (\n          <ListItem\n            button\n            onClick={() => navigate.push(getRecipeDetailPath(recipe.title))}\n            key={recipe.title}\n          >\n            <ListItemText primary={recipe.title} />\n          </ListItem>\n        ))}\n      </List>\n      {isLoading && <Skeleton aria-label=\"loading\" data-testid=\"loader\" />}\n      {hasError && (\n        <Box>\n          rezepte konnten nicht geladen werden\n          <Button onClick={() => fetchRecipes(dispatch)}>\n            nochmal versuchen\n          </Button>\n        </Box>\n      )}\n      <BottomRightFab\n        onClick={() => navigate.push(ADD_RECIPE_PATH)}\n        label=\"Rezept hinzufügen\"\n        children={<Add />}\n      />\n    </>\n  );\n};\n","import React from \"react\";\n\ntype ListItems = {\n  list: string[];\n  basket: string[];\n};\nconst LIST_KEY = \"LIST_KEY\";\nconst getLocalStorageJson = (key: string) => {\n  const json = localStorage.getItem(key);\n  if (json) {\n    return JSON.parse(json);\n  }\n  return undefined;\n};\nconst saveLocalStorageJson = (key: string, item: any) => {\n  localStorage.setItem(key, JSON.stringify(item));\n};\n\nexport const getList = (): ListItems => {\n  const list = getLocalStorageJson(LIST_KEY);\n  return list ? list : { basket: [], list: [] };\n};\n\nexport const addListItem = (item: string) => {\n  const listItems = getList();\n  listItems.list.push(item);\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const checkListItem = async (item: string) => {\n  const listItems = getList();\n  listItems.list = listItems.list.filter((listItem) => listItem !== item);\n  listItems.basket.push(item);\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const unCheckListItem = (item: string) => {\n  const listItems = getList();\n  listItems.basket = listItems.basket.filter((listItem) => listItem !== item);\n  listItems.list.push(item);\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const addListItems = (bulkList: string[]) => {\n  const listItems = getList();\n  listItems.list = [...listItems.list, ...bulkList];\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nexport const clearList = () => {\n  const listItems = getList();\n  listItems.basket = [];\n  saveLocalStorageJson(LIST_KEY, listItems);\n};\n\nlet listItemsCache: {\n  list: string[];\n  basket: string[];\n} = { list: [], basket: [] };\n\nexport const useListItems = () => {\n  const [list, setList] = React.useState<{\n    list: string[];\n    basket: string[];\n  }>(listItemsCache);\n\n  const fetchList = async () => {\n    try {\n      const result = await getList();\n      listItemsCache = result;\n      setList(result);\n    } catch {}\n  };\n\n  return {\n    list,\n    fetchList,\n  };\n};\n","import React from \"react\";\n\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { MenuBook } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Typography,\n  CardContent,\n  Button,\n  List,\n  ListItem,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nimport { LIST_PATH } from \"../routes-config\";\nimport { useRecipeByTitle } from \"./recipe-resource\";\nimport { addListItems } from \"../list/list-hooks\";\n\nexport const RecipeDetails: React.FC = () => {\n  const navigate = useHistory();\n  const { id } = useParams<{ id: string }>();\n  const title = decodeURIComponent(id || \"\");\n  const recipe = useRecipeByTitle(title);\n\n  if (!recipe) {\n    return <Skeleton height=\"12rem\" />;\n  }\n\n  return (\n    <Box mt={3}>\n      <Card>\n        <CardHeader\n          title={recipe.title}\n          action={\n            <Button\n              startIcon={<MenuBook />}\n              onClick={async () => {\n                addListItems(recipe.ingredients);\n                navigate.push(LIST_PATH);\n              }}\n            >\n              zur Einkaufsliste\n            </Button>\n          }\n        ></CardHeader>\n      </Card>\n\n      <Box mt={3}>\n        <Card>\n          <CardHeader subheader=\"Zutaten\"></CardHeader>\n          <List>\n            {recipe.ingredients.map((ingredient) => (\n              <ListItem key={ingredient}>{ingredient}</ListItem>\n            ))}\n          </List>\n        </Card>\n      </Box>\n      <Box mt={3}>\n        <Card>\n          <CardHeader subheader=\"Zubereitung\"></CardHeader>\n          <CardContent>\n            <Typography style={{ whiteSpace: \"pre-wrap\" }}>\n              {recipe.description}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n","export const BASE_PATH = \"\";\nexport const RECIPES_PATH = BASE_PATH + \"/rezepte\";\nexport const LIST_PATH = BASE_PATH + \"/einkaufliste\";\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { RecipeList } from \"./recipe-list\";\nimport { RecipeDetails } from \"./recipe-details\";\n\nimport { RECIPES_PATH } from \"../routes-config\";\n\nexport const ADD_RECIPE_PATH = RECIPES_PATH + \"/neues-rezept\";\nexport const RECIPE_DETAILS_PATH = RECIPES_PATH + \"/:id\";\nexport const RECIPE_DETAILS_EDIT_PATH = RECIPE_DETAILS_PATH + \"/bearbeiten\";\n\nexport const getRecipeDetailPath = (title: string) =>\n  RECIPES_PATH + \"/\" + title;\n\nexport const RecipePage = () => {\n  return (\n    <Switch>\n      <Route exact path={RECIPES_PATH} component={RecipeList} />\n\n      <Route exact path={RECIPE_DETAILS_PATH} component={RecipeDetails} />\n    </Switch>\n  );\n};\n","import React from \"react\";\n\n// @ts-ignore\nimport { Save } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { addListItems } from \"./list-hooks\";\n\nconst key = \"shoppingList\";\nexport const ListForm: React.FC<{ onCompleted(): void }> = ({\n  onCompleted,\n}) => {\n  const [value, setValue] = React.useState(\"\");\n  React.useEffect(() => {\n    const list = window.localStorage.getItem(key) || \"\";\n    if (typeof list === \"string\") {\n      setValue(list);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const id = setTimeout(() => {\n      window.localStorage.setItem(key, value);\n    }, 100);\n    return () => {\n      clearTimeout(id);\n    };\n  }, [value]);\n\n  return (\n    <Box>\n      <Card>\n        <CardHeader title=\"Einkaufsliste erweitern\" />\n        <CardContent>\n          <form\n            onSubmit={async (e) => {\n              e.preventDefault();\n              try {\n                addListItems([value]);\n                setValue(\"\");\n                onCompleted();\n              } catch (e) {\n                console.log(e);\n              }\n            }}\n          >\n            <TextField\n              value={value}\n              onChange={(e) => setValue(e.target.value)}\n              multiline\n              fullWidth\n              name=\"listItems\"\n              label=\"Einkaufsliste\"\n              required\n            />\n            <Button type=\"submit\" startIcon={<Save />}>\n              speichern\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport {\n  useListItems,\n  clearList,\n  checkListItem,\n  unCheckListItem,\n} from \"./list-hooks\";\nimport {\n  ListItem,\n  ListItemText,\n  Drawer,\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  Checkbox,\n  CardHeader,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\n\nimport { BottomRightFab } from \"../common\";\n\nimport { ListForm } from \"./list-form\";\n\nconst ClearListDialog: React.FC<{ onClearList(): void }> = ({\n  onClearList,\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n\n  return (\n    <>\n      <Button onClick={handleOpen}>Liste löschen</Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"clear-list-dialog-title\"\n      >\n        <DialogTitle id=\"clear-list-dialog-title\">\n          Die Einkaufsliste leeren ?\n        </DialogTitle>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            nein\n          </Button>\n          <Button\n            onClick={async () => {\n              try {\n                clearList();\n                onClearList();\n                handleClose();\n              } catch (e) {\n                console.log(e);\n              }\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            ja\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst CardList: React.FC<{\n  items: string[];\n  onSelect(item: string): void;\n  isChecked: boolean;\n  headline: string;\n}> = ({ items, onSelect, isChecked, headline }) => {\n  if (items.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader subheader={headline}></CardHeader>\n      <CardContent>\n        {items.map((item) => (\n          <ListItem\n            button\n            onClick={() => {\n              onSelect(item);\n            }}\n            key={item}\n          >\n            <ListItemText>{item}</ListItemText>\n            <Checkbox\n              checked={isChecked}\n              inputProps={{\n                \"aria-label\": `${item} ist im Einkaufswagen`,\n              }}\n            />\n          </ListItem>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const ListPage = () => {\n  const { list, fetchList } = useListItems();\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    fetchList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {list.list.length === 0 && list.basket.length === 0 && (\n        <Box display=\"flex\" alignContent=\"center\" justifyContent=\"center\">\n          Du hast noch nichts auf der Einkaufsliste\n        </Box>\n      )}\n      <CardList\n        items={list.list}\n        isChecked={false}\n        headline=\"In den Einkaufswagen\"\n        onSelect={async (item) => {\n          checkListItem(item);\n          fetchList();\n        }}\n      />\n      <Box mt={3} mb={3}></Box>\n      <CardList\n        items={list.basket}\n        isChecked={true}\n        headline=\"Schon dabei\"\n        onSelect={async (item) => {\n          unCheckListItem(item);\n          fetchList();\n        }}\n      />\n\n      {list.basket.length > 0 && (\n        <Box mt={4}>\n          <ClearListDialog onClearList={fetchList} />\n        </Box>\n      )}\n      <Drawer anchor=\"top\" open={open} onClose={() => setOpen(false)}>\n        <ListForm\n          onCompleted={() => {\n            setOpen(false);\n            fetchList();\n          }}\n        />\n      </Drawer>\n      <BottomRightFab onClick={() => setOpen(true)} label=\"brauche sachen\">\n        <Add></Add>\n      </BottomRightFab>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useLocation,\n  useHistory,\n} from \"react-router-dom\";\n\nimport { RecipePage } from \"./recipe\";\nimport { ListPage } from \"./list\";\n\nimport { FormatListBulleted, MenuBook, Settings } from \"@material-ui/icons\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  AppBar,\n  BottomNavigation,\n  BottomNavigationAction,\n} from \"@material-ui/core\";\nimport { RECIPES_PATH, LIST_PATH } from \"./routes-config\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    nav: {\n      marginTop: theme.spacing(8),\n      bottom: 0,\n      top: \"auto\",\n    },\n  })\n);\n\nconst BottomNav = () => {\n  const navigate = useHistory();\n  const styles = useStyles();\n  const location = useLocation();\n\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={styles.nav}>\n      <BottomNavigation value={location.pathname} showLabels>\n        <BottomNavigationAction\n          onClick={() => navigate.push(RECIPES_PATH)}\n          value={RECIPES_PATH}\n          label=\"Rezepte\"\n          icon={<FormatListBulleted />}\n        />\n        <BottomNavigationAction\n          onClick={() => navigate.push(LIST_PATH)}\n          value={LIST_PATH}\n          label=\"Liste\"\n          icon={<MenuBook />}\n        />\n      </BottomNavigation>\n    </AppBar>\n  );\n};\n\nexport const RootRoutes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path={RECIPES_PATH} component={RecipePage} />\n        <Route path={LIST_PATH} component={ListPage} />\n        <Redirect from=\"/\" to={RECIPES_PATH} />\n      </Switch>\n      <BottomNav />\n    </Router>\n  );\n};\n","import React from \"react\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { Container, Box } from \"@material-ui/core\";\nimport { RootRoutes } from \"./routes\";\nimport { RecipeProvider } from \"./recipe/recipe-resource\";\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#00acc1\",\n      },\n      secondary: {\n        main: \"#00bfa5\",\n      },\n      type: \"dark\",\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <RecipeProvider>\n        <Container>\n          <Box mt={2} mb={8}>\n            <RootRoutes />\n          </Box>\n        </Container>\n      </RecipeProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}