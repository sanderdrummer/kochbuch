{"version":3,"sources":["common/fab.tsx","common/ocr-button.tsx","common/search-input.tsx","db.ts","recipe/recipe-hooks.tsx","recipe/recipe-form.tsx","routes-config.ts","recipe/recipe-list.tsx","recipe/recipe-details.tsx","recipe/recipe-page.tsx","list/list-hooks.tsx","list/list-form.tsx","list/list-page.tsx","settings/import-export.tsx","settings/settings-page.tsx","routes.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["fabStyles","makeStyles","theme","createStyles","fab","position","bottom","spacing","right","BottomRightFab","onClick","label","children","styles","Fab","className","color","aria-label","worker","createWorker","logger","m","console","log","initialState","status","text","image","reducer","state","action","type","payload","OcrButton","onComplete","React","useState","open","setOpen","useReducer","dispatch","imageRef","useRef","previewImage","file","reader","FileReader","onload","e","target","result","readAsDataURL","processImage","a","current","load","loadLanguage","initialize","recognize","data","Error","useOcr","useEffect","Button","CameraAlt","SwipeableDrawer","anchor","onClose","onOpen","Card","CardHeader","title","CardContent","onChange","files","style","maxWidth","maxHeight","ref","src","alt","CardActions","disabled","CircularProgress","useStyles","root","padding","display","alignItems","input","marginLeft","flex","iconButton","divider","height","margin","SearchInput","onSubmit","classes","query","setQuery","Paper","preventDefault","component","InputBase","value","placeholder","inputProps","IconButton","Divider","orientation","db","listItems","basketItems","recipes","version","stores","table","Dexie","getRecipeByName","where","equals","toArray","recipe","getPagedRecipes","offset","limit","queryPagedRecipes","startsWithIgnoreCase","or","startsWithAnyOf","addRecipe","add","updateRecipe","put","deleteRecipe","delete","bulkAddRecipes","bulkPut","getList","basket","list","checkListItem","listItem","unCheckListItem","addListItems","split","map","inBasket","recipeTitleCache","recipeListCache","useRecipeByTitle","setStatus","fetchRecipe","retry","updateCache","validateRequired","undefined","addUpdateRecipe","isUpdate","RecipeForm","initialValues","Boolean","handleSubmit","submitting","invalid","form","autoComplete","reset","name","validate","props","TextField","fullWidth","error","meta","touched","Box","mt","multiline","RecipeEditForm","navigate","useHistory","id","useParams","decodeURIComponent","Skeleton","push","getRecipeDetailPath","Delete","RecipeList","setRecipes","hasMore","setHasMore","offsetRef","checkHasMore","count","length","fetchRecipes","queryRecipes","useRecipes","List","ListItem","button","key","ListItemText","primary","secondary","tags","ADD_RECIPE_PATH","Add","RecipeDetails","subheader","startIcon","MenuBook","ingredients","getRecipeDetailEditPath","Edit","Typography","whiteSpace","description","RECIPES_PATH","RecipePage","history","exact","path","render","RECIPE_DETAILS_PATH","listItemsCache","ListForm","onCompleted","currentTarget","required","Save","ClearListDialog","onClearList","handleClose","Dialog","aria-labelledby","DialogTitle","DialogActions","clear","autoFocus","CardList","items","onSelect","isChecked","headline","item","Checkbox","checked","ListPage","setList","fetchList","useListItems","mb","ImportRecipes","event","JSON","parse","readAsText","Snackbar","autoHideDuration","message","anchorOrigin","vertical","horizontal","ExportRecipes","href","updateHref","getData","encodeURIComponent","stringify","download","SettingsPage","marginTop","nav","top","BottomNav","location","pathname","AppBar","BottomNavigation","showLabels","BottomNavigationAction","icon","FormatListBulleted","Settings","RootRoutes","from","to","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","palette","ThemeProvider","CssBaseline","Container","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.db4ef82d.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Fab, Theme } from \"@material-ui/core\";\n\nconst fabStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      position: \"fixed\",\n      bottom: theme.spacing(8),\n\n      right: theme.spacing(2)\n    }\n  })\n);\n\nexport const BottomRightFab: React.FC<{\n  onClick: (e: any) => void;\n  label: string;\n}> = ({ onClick, label, children }) => {\n  const styles = fabStyles();\n  return (\n    <Fab\n      onClick={onClick}\n      className={styles.fab}\n      color=\"primary\"\n      aria-label={label}\n    >\n      {children}\n    </Fab>\n  );\n};\n","import React from \"react\";\n\nimport { createWorker } from \"tesseract.js\";\n\nimport {\n  Button,\n  Card,\n  SwipeableDrawer,\n  CardContent,\n  CardActions,\n  CardHeader,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { CameraAlt } from \"@material-ui/icons\";\n\nconst worker = createWorker({\n  logger: m => console.log(m)\n});\n\nconst initialState = {\n  status: \"\",\n  text: \"\",\n  image: \"\"\n};\n\nconst reducer = (state = initialState, action: OcrActions) => {\n  switch (action.type) {\n    case \"setImage\":\n      return { ...state, image: action.payload };\n    case \"updateStatus\":\n      return { ...state, status: action.payload };\n    case \"updateText\":\n      return { ...state, text: action.payload, status: \"\" };\n    default:\n      return state;\n  }\n};\n\ntype OcrActions = {\n  type: \"updateStatus\" | \"updateText\" | \"setImage\";\n  payload: string;\n};\n\nconst useOcr = () => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const imageRef = React.useRef<HTMLImageElement>(null);\n\n  const processImage = async () => {\n    if (imageRef.current) {\n      dispatch({ type: \"updateStatus\", payload: \"loading\" });\n      await worker.load();\n      await worker.loadLanguage(\"eng\");\n      await worker.initialize(\"eng\");\n      const {\n        data: { text }\n      } = await worker.recognize(imageRef.current);\n      dispatch({ type: \"updateText\", payload: text });\n      return;\n    }\n\n    throw new Error(\"no image found\");\n  };\n\n  const previewImage = (file: File) => {\n    const reader = new FileReader();\n    reader.onload = e => {\n      if (typeof e?.target?.result === \"string\") {\n        dispatch({ type: \"setImage\", payload: e?.target?.result });\n      }\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  return { state, previewImage, processImage, imageRef };\n};\n\nexport const OcrButton: React.FC<{ onComplete(text: string): void }> = ({\n  onComplete\n}) => {\n  const [open, setOpen] = React.useState(false);\n  const { state, previewImage, processImage, imageRef } = useOcr();\n\n  React.useEffect(() => {\n    if (state.text) {\n      onComplete(state.text);\n      setOpen(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.text]);\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>\n        <CameraAlt />\n      </Button>\n      <SwipeableDrawer\n        anchor=\"top\"\n        open={open}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n      >\n        <Card>\n          <CardHeader title=\"Text aus Bild extrahieren\" />\n          <CardContent>\n            <input\n              type=\"file\"\n              onChange={e => {\n                const files = e.target.files;\n                if (files) {\n                  previewImage(files[0]);\n                }\n              }}\n            />\n            {state.image && (\n              <img\n                style={{ maxWidth: \"100%\", maxHeight: \"40vh\" }}\n                ref={imageRef}\n                src={state.image}\n                alt=\"preview of your upload\"\n              />\n            )}\n          </CardContent>\n          <CardActions>\n            <Button disabled={!state.image} onClick={processImage}>\n              {state.status === \"loading\" ? (\n                <CircularProgress />\n              ) : (\n                \"Text aus dem Bild kopieren\"\n              )}\n            </Button>\n          </CardActions>\n        </Card>\n      </SwipeableDrawer>\n    </>\n  );\n};\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Clear from \"@material-ui/icons/Clear\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1\n    },\n    iconButton: {\n      padding: 10\n    },\n    divider: {\n      height: 28,\n      margin: 4\n    }\n  })\n);\n\nexport const SearchInput: React.FC<{\n  onSubmit(query: string): void;\n  label: string;\n}> = ({ onSubmit, label }) => {\n  const classes = useStyles();\n  const [query, setQuery] = React.useState(\"\");\n  const reset = () => {\n    setQuery(\"\");\n    onSubmit(\"\");\n  };\n  return (\n    <Paper\n      onSubmit={e => {\n        e.preventDefault();\n        onSubmit(query);\n      }}\n      component=\"form\"\n      className={classes.root}\n    >\n      <InputBase\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n        className={classes.input}\n        placeholder={label}\n        inputProps={{ \"aria-label\": label }}\n      />\n      <IconButton\n        type=\"button\"\n        color=\"secondary\"\n        className={classes.iconButton}\n        aria-label=\"Suche löschen\"\n        onClick={reset}\n      >\n        <Clear />\n      </IconButton>\n      <Divider className={classes.divider} orientation=\"vertical\" />\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"suchen\"\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n};\n","import Dexie from \"dexie\";\n\nexport interface ListItem {\n  title: string;\n}\n\nexport interface Recipe {\n  title: string;\n  tags: string;\n  ingredients: string;\n  description: string;\n}\n\nexport const DEFAULT_PAGE_SIZE = 50;\n\nexport class ListDb extends Dexie {\n  listItems: Dexie.Table<ListItem, string>;\n  basketItems: Dexie.Table<ListItem, string>;\n  recipes: Dexie.Table<Recipe, string>;\n  constructor() {\n    super(\"recipes-db-1\");\n    this.version(1).stores({\n      basketItems: \"title\",\n      listItems: \"title\",\n      recipes: \"title,tags\"\n    });\n    this.listItems = this.table(\"listItems\");\n    this.basketItems = this.table(\"basketItems\");\n    this.recipes = this.table(\"recipes\");\n  }\n}\n\nconst db = new ListDb();\n\nexport const getRecipeByName = async (title: string) => {\n  const [recipe] = await db.recipes\n    .where(\"title\")\n    .equals(title)\n    .toArray();\n\n  return recipe;\n};\n\nexport const getRecipes = () => {\n  return db.recipes.toArray();\n};\n\nexport const getPagedRecipes = (offset = 0) => {\n  return db.recipes\n    .offset(offset)\n    .limit(DEFAULT_PAGE_SIZE)\n    .toArray();\n};\n\nexport const queryPagedRecipes = (query = \"\") => {\n  return db.recipes\n    .where(\"title\")\n    .startsWithIgnoreCase(query)\n    .or(\"tags\")\n    .startsWithAnyOf(query)\n    .limit(200)\n    .toArray();\n};\n\nexport const getRecipesCount = () => {\n  return db.recipes.count();\n};\nexport const addRecipe = (recipe: Recipe) => {\n  return db.recipes.add(recipe);\n};\nexport const updateRecipe = (recipe: Recipe) => {\n  return db.recipes.put(recipe);\n};\nexport const deleteRecipe = (title: string) => {\n  return db.recipes.delete(title);\n};\nexport const bulkAddRecipes = (recipes: Recipe[]) => {\n  return db.recipes.bulkPut(recipes);\n};\nexport const getRecipesForExport = () => {\n  return db.recipes.toArray();\n};\n\nexport const getList = async () => {\n  const basket = await db.basketItems.toArray();\n  const list = await db.listItems.toArray();\n  return { basket, list };\n};\n\nexport const addListItem = (listItem: ListItem) => {\n  return db.listItems.add(listItem);\n};\n\nexport const checkListItem = async (listItem: ListItem) => {\n  db.basketItems.add(listItem);\n  db.listItems.delete(listItem.title);\n};\n\nexport const unCheckListItem = async (listItem: ListItem) => {\n  db.basketItems.delete(listItem.title);\n  db.listItems.add(listItem);\n};\n\nexport const addListItems = (listItems: string) => {\n  return db.listItems.bulkPut(\n    listItems.split(\"\\n\").map(title => ({\n      title,\n      inBasket: false\n    }))\n  );\n};\n\nexport const clearList = () => {\n  return db.basketItems.clear();\n};\n","import React from \"react\";\n\nimport {\n  Recipe,\n  getRecipeByName,\n  getPagedRecipes,\n  getRecipesCount,\n  DEFAULT_PAGE_SIZE,\n  queryPagedRecipes\n} from \"../db\";\n\nexport type Status<T = \"success\"> = \"\" | \"pending\" | \"error\" | T;\n\nconst recipeTitleCache: Record<string, Recipe> = {};\nlet recipeListCache: Recipe[] = [];\n\nexport const useRecipeByTitle = (title: string) => {\n  const [status, setStatus] = React.useState<Status<Recipe>>(\n    recipeTitleCache[title] || \"\"\n  );\n\n  const updateCache = (recipe: Recipe) => {\n    recipeTitleCache[recipe.title] = recipe;\n  };\n\n  const fetchRecipe = async (title: string) => {\n    try {\n      if (recipeTitleCache[title]) {\n        setStatus(recipeTitleCache[title]);\n        return;\n      }\n      setStatus(\"pending\");\n      const result = await getRecipeByName(title);\n      setStatus(result);\n      recipeTitleCache[title] = result;\n    } catch {\n      setStatus(\"error\");\n    }\n  };\n  React.useEffect(() => {\n    fetchRecipe(title);\n  }, [title]);\n\n  return {\n    status,\n    retry: fetchRecipe,\n    updateCache\n  };\n};\n\nexport const useRecipes = () => {\n  const status = \"\";\n  const [recipes, setRecipes] = React.useState<Recipe[]>([]);\n  const [hasMore, setHasMore] = React.useState(false);\n  const offsetRef = React.useRef(0);\n\n  const checkHasMore = async () => {\n    const count = await getRecipesCount();\n    setHasMore(count !== recipeListCache.length);\n  };\n\n  const fetchRecipes = async () => {\n    try {\n      const result = await getPagedRecipes(offsetRef.current);\n\n      if (result.length) {\n        offsetRef.current += DEFAULT_PAGE_SIZE;\n        recipeListCache = [...recipes, ...result];\n        setRecipes(recipeListCache);\n        checkHasMore();\n      } else {\n        setHasMore(false);\n      }\n    } catch {}\n  };\n\n  const queryRecipes = async (query = \"\") => {\n    try {\n      if (query) {\n        const result = await queryPagedRecipes(query);\n        setRecipes(result);\n        setHasMore(false);\n      } else {\n        setRecipes(recipeListCache);\n        checkHasMore();\n      }\n    } catch {}\n  };\n\n  return {\n    status,\n    hasMore,\n    recipes,\n    fetchRecipes,\n    queryRecipes\n  };\n};\n","import React from \"react\";\n\n// @ts-ignore\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Delete } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { Form, Field } from \"react-final-form\";\n\nimport { BottomRightFab, OcrButton } from \"../common\";\nimport { Recipe, addRecipe, updateRecipe, deleteRecipe } from \"../db\";\nimport { useRecipeByTitle } from \"./recipe-hooks\";\nimport { getRecipeDetailPath } from \".\";\n\nimport { RECIPES_PATH } from \"../routes-config\";\n\nconst validateRequired = (value: string) => (value ? undefined : \"required\");\n\nconst addUpdateRecipe = async (recipe: Recipe, isUpdate: boolean) => {\n  if (isUpdate) {\n    await updateRecipe(recipe);\n  } else {\n    await addRecipe(recipe);\n  }\n\n  return recipe;\n};\n\nexport const RecipeForm: React.FC<{\n  onComplete: (recipe: Recipe) => void;\n  recipe?: Recipe;\n}> = ({ onComplete, recipe }) => {\n  return (\n    <Card>\n      <CardHeader title=\"Neues Rezept\" />\n      <CardContent>\n        <Form<Recipe>\n          initialValues={recipe}\n          onSubmit={value => addUpdateRecipe(value, Boolean(recipe))}\n        >\n          {({ handleSubmit, submitting, invalid, form }) => (\n            <form\n              autoComplete=\"off\"\n              onSubmit={async e => {\n                const recipe = await handleSubmit(e);\n                if (recipe) {\n                  form.reset();\n                  onComplete(recipe as Recipe);\n                }\n              }}\n            >\n              <Field name=\"title\" validate={validateRequired}>\n                {props => (\n                  <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    error={props.meta.touched && props.meta.error}\n                    label=\"Rezept Titel\"\n                    {...props.input}\n                  />\n                )}\n              </Field>\n              <Field name=\"tags\">\n                {props => (\n                  <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Tags\"\n                    name=\"tags\"\n                    {...props.input}\n                  />\n                )}\n              </Field>\n\n              <Field name=\"ingredients\" validate={validateRequired}>\n                {props => (\n                  <Box mt={2}>\n                    <TextField\n                      margin=\"normal\"\n                      multiline\n                      fullWidth\n                      error={props.meta.touched && props.meta.error}\n                      label=\"Zutaten\"\n                      {...props.input}\n                    />\n                    <OcrButton\n                      onComplete={text => {\n                        props.input.onChange(text);\n                      }}\n                    />\n                  </Box>\n                )}\n              </Field>\n\n              <Field name=\"description\" validate={validateRequired}>\n                {props => (\n                  <Box mt={2}>\n                    <TextField\n                      margin=\"normal\"\n                      multiline\n                      fullWidth\n                      label=\"Zubereitung\"\n                      {...props.input}\n                    />\n                    <OcrButton\n                      onComplete={text => {\n                        props.input.onChange(text);\n                      }}\n                    />\n                  </Box>\n                )}\n              </Field>\n\n              <Box mt={2}>\n                <Button\n                  disabled={invalid || submitting}\n                  color=\"primary\"\n                  type=\"submit\"\n                >\n                  {recipe\n                    ? `änderung an ${recipe.title} speichern`\n                    : \"neues Rezept speichern\"}\n                </Button>\n              </Box>\n            </form>\n          )}\n        </Form>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const RecipeEditForm: React.FC = () => {\n  const navigate = useHistory();\n  const { id } = useParams();\n  const title = decodeURIComponent(id || \"\");\n  const { status, updateCache } = useRecipeByTitle(title);\n\n  if (status === \"\" || status === \"pending\" || status === \"error\") {\n    return <Skeleton height=\"12rem\" />;\n  }\n\n  return (\n    <>\n      <RecipeForm\n        onComplete={recipe => {\n          updateCache(recipe);\n          navigate.push(getRecipeDetailPath(recipe.title));\n        }}\n        recipe={status}\n      />\n\n      <BottomRightFab\n        label=\"Rezept löschen\"\n        onClick={async () => {\n          try {\n            await deleteRecipe(status.title);\n            navigate.push(RECIPES_PATH);\n          } catch (e) {\n            console.log(e);\n          }\n        }}\n      >\n        <Delete />\n      </BottomRightFab>\n    </>\n  );\n};\n","export const BASE_PATH = \"\";\nexport const RECIPES_PATH = BASE_PATH + \"/rezepte\";\nexport const LIST_PATH = BASE_PATH + \"/einkaufliste\";\nexport const SETTINGS_PATH = BASE_PATH + \"/einstellungen\";\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport { Skeleton } from \"@material-ui/lab\";\nimport { Add } from \"@material-ui/icons\";\nimport { List, ListItem, ListItemText, Button, Box } from \"@material-ui/core\";\n\nimport { SearchInput, BottomRightFab } from \"../common\";\nimport { getRecipeDetailPath, ADD_RECIPE_PATH } from \".\";\nimport { useRecipes } from \"./recipe-hooks\";\n\nexport const ListLoader: React.FC = () => {\n  return (\n    <>\n      <Skeleton height=\"4rem\" />\n      <Skeleton height=\"4rem\" />\n    </>\n  );\n};\n\nexport const RecipeList = () => {\n  const { recipes, status, fetchRecipes, queryRecipes, hasMore } = useRecipes();\n  const navigate = useHistory();\n\n  React.useEffect(() => {\n    fetchRecipes();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <SearchInput label=\"Rezepte suchen\" onSubmit={queryRecipes} />\n      <List>\n        {recipes.map(recipe => (\n          <ListItem\n            button\n            onClick={() => navigate.push(getRecipeDetailPath(recipe.title))}\n            key={recipe.title}\n          >\n            <ListItemText primary={recipe.title} secondary={recipe.tags} />\n          </ListItem>\n        ))}\n      </List>\n      {hasMore && <Button onClick={fetchRecipes}>Load more</Button>}\n\n      {status === \"error\" && (\n        <Box>\n          rezpete konnten nicht geladen werden{\" \"}\n          <Button onClick={fetchRecipes}>nochmal versuchen</Button>\n        </Box>\n      )}\n      <BottomRightFab\n        onClick={() => navigate.push(ADD_RECIPE_PATH)}\n        label=\"Rezept hinzufügen\"\n        children={<Add />}\n      />\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Edit, MenuBook } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Typography,\n  CardContent,\n  Button\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nimport { BottomRightFab } from \"../common\";\nimport { addListItems } from \"../db\";\nimport { useRecipeByTitle } from \"./recipe-hooks\";\nimport { getRecipeDetailEditPath } from \".\";\n\nimport { LIST_PATH } from \"../routes-config\";\n\nexport const RecipeDetails: React.FC = () => {\n  const navigate = useHistory();\n  const { id } = useParams();\n  const title = decodeURIComponent(id || \"\");\n  const { status } = useRecipeByTitle(title);\n\n  if (status === \"\" || status === \"pending\") {\n    return <Skeleton height=\"12rem\" />;\n  }\n\n  if (status === \"error\") {\n    return <Box>rezpete konnten nicht geladen werden</Box>;\n  }\n\n  return (\n    <Box mt={3}>\n      <Card>\n        <CardHeader\n          title={status.title}\n          subheader={status.tags}\n          action={\n            <Button\n              startIcon={<MenuBook />}\n              onClick={async () => {\n                await addListItems(status.ingredients);\n                navigate.push(LIST_PATH);\n              }}\n            >\n              zur Einkaufsliste\n            </Button>\n          }\n        ></CardHeader>\n      </Card>\n      <BottomRightFab\n        onClick={() => navigate.push(getRecipeDetailEditPath(status.title))}\n        label=\"Rezept bearbeiten\"\n        children={<Edit />}\n      />\n      <Box mt={3}>\n        <Card>\n          <CardHeader subheader=\"Zutaten\"></CardHeader>\n          <CardContent>\n            <Typography style={{ whiteSpace: \"pre-wrap\" }}>\n              {status.ingredients}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Box>\n      <Box mt={3}>\n        <Card>\n          <CardHeader subheader=\"Zubereitung\"></CardHeader>\n          <CardContent>\n            <Typography style={{ whiteSpace: \"pre-wrap\" }}>\n              {status.description}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\n\nimport { RecipeForm, RecipeEditForm } from \"./recipe-form\";\nimport { RecipeList } from \"./recipe-list\";\nimport { RecipeDetails } from \"./recipe-details\";\n\nimport { RECIPES_PATH } from \"../routes-config\";\n\nexport const ADD_RECIPE_PATH = RECIPES_PATH + \"/neues-rezept\";\nexport const RECIPE_DETAILS_PATH = RECIPES_PATH + \"/:id\";\nexport const RECIPE_DETAILS_EDIT_PATH = RECIPE_DETAILS_PATH + \"/bearbeiten\";\n\nexport const getRecipeDetailPath = (title: string) =>\n  RECIPES_PATH + \"/\" + title;\nexport const getRecipeDetailEditPath = (title: string) =>\n  getRecipeDetailPath(title) + \"/bearbeiten\";\n\nexport const RecipePage = () => {\n  const history = useHistory();\n\n  return (\n    <Switch>\n      <Route exact path={RECIPES_PATH} component={RecipeList} />\n      <Route\n        path={ADD_RECIPE_PATH}\n        render={() => (\n          <RecipeForm\n            onComplete={recipe => {\n              history.push(getRecipeDetailPath(recipe.title));\n            }}\n          />\n        )}\n      />\n      <Route exact path={RECIPE_DETAILS_PATH} component={RecipeDetails} />\n      <Route path={RECIPE_DETAILS_EDIT_PATH} component={RecipeEditForm} />\n    </Switch>\n  );\n};\n","import React from \"react\";\n\nimport { ListItem, getList } from \"../db\";\n\nlet listItemsCache: {\n  list: ListItem[];\n  basket: ListItem[];\n} = { list: [], basket: [] };\n\nexport const useListItems = () => {\n  const [list, setList] = React.useState<{\n    list: ListItem[];\n    basket: ListItem[];\n  }>(listItemsCache);\n\n  const fetchList = async () => {\n    try {\n      const result = await getList();\n      listItemsCache = result;\n      setList(result);\n    } catch {}\n  };\n\n  return {\n    list,\n    fetchList\n  };\n};\n","import React from \"react\";\n\n// @ts-ignore\nimport { Save } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button\n} from \"@material-ui/core\";\n\nimport { addListItems } from \"../db\";\n\nexport const ListForm: React.FC<{ onCompleted(): void }> = ({\n  onCompleted\n}) => {\n  return (\n    <Box>\n      <Card>\n        <CardHeader title=\"Einkaufsliste erweitern\" />\n        <CardContent>\n          <form\n            onSubmit={async e => {\n              e.preventDefault();\n              const form = e.currentTarget;\n              try {\n                await addListItems(form.listItems.value);\n                form.reset();\n                onCompleted();\n              } catch (e) {\n                console.log(e);\n              }\n            }}\n          >\n            <TextField\n              multiline\n              fullWidth\n              name=\"listItems\"\n              label=\"Einkaufsliste\"\n              required\n            />\n            <Button type=\"submit\" startIcon={<Save />}>\n              speichern\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { useListItems } from \"./list-hooks\";\nimport {\n  ListItem,\n  ListItemText,\n  SwipeableDrawer,\n  List,\n  Divider,\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  Checkbox,\n  CardHeader,\n  Card,\n  CardContent\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\n\nimport { BottomRightFab } from \"../common\";\n\nimport { ListForm } from \"./list-form\";\nimport {\n  clearList,\n  checkListItem,\n  unCheckListItem,\n  ListItem as ListItemType\n} from \"../db\";\n\nconst ClearListDialog: React.FC<{ onClearList(): void }> = ({\n  onClearList\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n\n  return (\n    <>\n      <Button onClick={handleOpen}>Liste löschen</Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"clear-list-dialog-title\"\n      >\n        <DialogTitle id=\"clear-list-dialog-title\">\n          Die Einkaufsliste leeren ?\n        </DialogTitle>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            nein\n          </Button>\n          <Button\n            onClick={async () => {\n              try {\n                await clearList();\n                onClearList();\n                handleClose();\n              } catch (e) {\n                console.log(e);\n              }\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            ja\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst CardList: React.FC<{\n  items: ListItemType[];\n  onSelect(item: ListItemType): void;\n  isChecked: boolean;\n  headline: string;\n}> = ({ items, onSelect, isChecked, headline }) => {\n  if (items.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader subheader={headline}></CardHeader>\n      <CardContent>\n        {items.map(item => (\n          <ListItem\n            button\n            onClick={() => {\n              onSelect(item);\n            }}\n            key={item.title}\n          >\n            <ListItemText>{item.title}</ListItemText>\n            <Checkbox\n              checked={isChecked}\n              inputProps={{\n                \"aria-label\": `${item.title} ist im Einkaufswagen`\n              }}\n            />\n          </ListItem>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const ListPage = () => {\n  const { list, fetchList } = useListItems();\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    fetchList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <CardList\n        items={list.list}\n        isChecked={false}\n        headline=\"In den Einkaufswagen\"\n        onSelect={async item => {\n          await checkListItem(item);\n          fetchList();\n        }}\n      />\n      <Box mt={3} mb={3}></Box>\n      <CardList\n        items={list.basket}\n        isChecked={true}\n        headline=\"Schon dabei\"\n        onSelect={async item => {\n          await unCheckListItem(item);\n          fetchList();\n        }}\n      />\n\n      <Box mt={4}>\n        <ClearListDialog onClearList={fetchList} />\n      </Box>\n      <SwipeableDrawer\n        anchor=\"top\"\n        open={open}\n        onOpen={() => setOpen(true)}\n        onClose={() => setOpen(false)}\n      >\n        <ListForm\n          onCompleted={() => {\n            setOpen(false);\n            fetchList();\n          }}\n        />\n      </SwipeableDrawer>\n      <BottomRightFab onClick={() => setOpen(true)} label=\"brauche sachen\">\n        <Add></Add>\n      </BottomRightFab>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { Button, Snackbar } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nimport { getRecipesForExport, bulkAddRecipes, Recipe } from \"../db\";\n\nexport const ImportRecipes = () => {\n  const [recipes, setRecipes] = React.useState<Recipe[] | null>(null);\n  const [status, setStatus] = React.useState<\"pending\" | \"error\" | \"success\">();\n  const handleImportRecipes = (event: any) => {\n    const onReaderLoad = (event: any) => {\n      console.log(event.target.result);\n      const recipes = JSON.parse(event.target.result);\n      setRecipes(recipes);\n    };\n\n    const reader = new FileReader();\n    reader.onload = onReaderLoad;\n    reader.readAsText(event.target.files[0]);\n  };\n\n  return (\n    <>\n      <input type=\"file\" onChange={handleImportRecipes} />\n      <Button\n        onClick={async () => {\n          setStatus(\"pending\");\n          try {\n            await bulkAddRecipes(recipes || []);\n            setStatus(\"success\");\n          } catch {\n            setStatus(\"error\");\n          }\n        }}\n        disabled={recipes === null || status === \"pending\"}\n      >\n        importieren\n      </Button>\n      <Snackbar\n        autoHideDuration={4000}\n        open={status === \"error\"}\n        onClose={() => setStatus(undefined)}\n        message=\"Oh nein der import hat leider nicht geklappt\"\n      ></Snackbar>\n      <Snackbar\n        autoHideDuration={4000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        open={status === \"success\"}\n        onClose={() => setStatus(undefined)}\n        message={`Import erfolgreich ${recipes?.length ||\n          0} Rezepte hinzugefügt oder\n        aktualisiert`}\n      ></Snackbar>\n    </>\n  );\n};\n\nexport const ExportRecipes = () => {\n  const [href, updateHref] = React.useState(\"\");\n\n  const getData = async () => {\n    const recipes = await getRecipesForExport();\n    const data =\n      \"data:text/json;charset=utf-8,\" +\n      encodeURIComponent(JSON.stringify(recipes));\n    updateHref(data);\n  };\n\n  React.useEffect(() => {\n    getData();\n  }, []);\n\n  if (!href) {\n    return <Skeleton></Skeleton>;\n  }\n\n  return (\n    <Button download=\"recipes.json\" href={href}>\n      exportieren\n    </Button>\n  );\n};\n","import React from \"react\";\n\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions\n} from \"@material-ui/core\";\nimport { ExportRecipes, ImportRecipes } from \"./import-export\";\n\nexport const SettingsPage = () => {\n  return (\n    <Box>\n      <Card>\n        <CardHeader title=\"Rezepte exportieren\"></CardHeader>\n        <CardActions>\n          <ExportRecipes />\n        </CardActions>\n      </Card>\n      <Card style={{ marginTop: \"1rem\" }}>\n        <CardHeader title=\"Rezepte importieren\"></CardHeader>\n        <CardContent>\n          <ImportRecipes />\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n","import React from \"react\";\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory\n} from \"react-router-dom\";\n\nimport { RecipePage } from \"./recipe\";\nimport { ListPage } from \"./list\";\nimport { SettingsPage } from \"./settings\";\n\nimport { FormatListBulleted, MenuBook, Settings } from \"@material-ui/icons\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  AppBar,\n  BottomNavigation,\n  BottomNavigationAction\n} from \"@material-ui/core\";\nimport { RECIPES_PATH, LIST_PATH, SETTINGS_PATH } from \"./routes-config\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    nav: {\n      marginTop: theme.spacing(8),\n      bottom: 0,\n      top: \"auto\"\n    }\n  })\n);\n\nconst BottomNav = () => {\n  const navigate = useHistory();\n  const styles = useStyles();\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [_1, value] = navigate.location.pathname.split(\"/\");\n\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={styles.nav}>\n      <BottomNavigation value={value} showLabels>\n        <BottomNavigationAction\n          onClick={() => navigate.push(RECIPES_PATH)}\n          value=\"rezepte\"\n          label=\"Rezepte\"\n          icon={<FormatListBulleted />}\n        />\n        <BottomNavigationAction\n          onClick={() => navigate.push(LIST_PATH)}\n          value=\"einkaufliste\"\n          label=\"Liste\"\n          icon={<MenuBook />}\n        />\n        <BottomNavigationAction\n          onClick={() => navigate.push(SETTINGS_PATH)}\n          value=\"einstellungen\"\n          label=\"Einstellungen\"\n          icon={<Settings />}\n        />\n      </BottomNavigation>\n    </AppBar>\n  );\n};\n\nexport const RootRoutes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path={RECIPES_PATH} component={RecipePage} />\n        <Route path={LIST_PATH} component={ListPage} />\n        <Route path={SETTINGS_PATH} component={SettingsPage} />\n        <Redirect from=\"/\" to={RECIPES_PATH} />\n      </Switch>\n      <BottomNav />\n    </Router>\n  );\n};\n","import React from \"react\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { Container, Box } from \"@material-ui/core\";\nimport { RootRoutes } from \"./routes\";\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\"\n        }\n      }),\n    [prefersDarkMode]\n  );\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <Container>\n        <Box mt={2} mb={8}>\n          <RootRoutes />\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}