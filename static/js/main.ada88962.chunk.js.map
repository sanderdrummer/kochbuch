{"version":3,"sources":["common/fab.tsx","common/search-input.tsx","db.ts","recipe/recipe-hooks.tsx","recipe/recipe-form.tsx","routes-config.ts","recipe/recipe-list.tsx","recipe/recipe-details.tsx","recipe/recipe-page.tsx","list/list-hooks.tsx","list/list-form.tsx","list/list-page.tsx","settings/import-export.tsx","settings/settings-page.tsx","routes.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["fabStyles","makeStyles","theme","createStyles","fab","position","bottom","spacing","right","BottomRightFab","onClick","label","children","styles","Fab","className","color","aria-label","useStyles","root","padding","display","alignItems","input","marginLeft","flex","iconButton","divider","height","margin","SearchInput","onSubmit","classes","React","useState","query","setQuery","Paper","e","preventDefault","component","InputBase","value","onChange","target","placeholder","inputProps","IconButton","type","Divider","orientation","db","listItems","basketItems","recipes","version","stores","table","Dexie","getRecipeByName","title","a","where","equals","toArray","recipe","getPagedRecipes","offset","limit","queryPagedRecipes","startsWithIgnoreCase","or","addRecipe","add","updateRecipe","put","deleteRecipe","delete","bulkAddRecipes","bulkPut","getList","basket","list","checkListItem","listItem","unCheckListItem","addListItems","split","map","inBasket","recipeTitleCache","recipeListCache","useRecipeByTitle","status","setStatus","fetchRecipe","result","useEffect","retry","updateCache","validateRequired","undefined","addUpdateRecipe","isUpdate","RecipeForm","onComplete","Card","CardHeader","CardContent","initialValues","Boolean","handleSubmit","submitting","invalid","form","autoComplete","reset","name","validate","props","TextField","fullWidth","error","meta","touched","Box","mt","multiline","Button","disabled","RecipeEditForm","navigate","useHistory","id","useParams","decodeURIComponent","Skeleton","push","getRecipeDetailPath","console","log","Delete","RecipeList","setRecipes","hasMore","setHasMore","offsetRef","useRef","checkHasMore","count","length","fetchRecipes","current","queryRecipes","useRecipes","List","ListItem","button","key","ListItemText","primary","secondary","tags","ADD_RECIPE_PATH","Add","RecipeDetails","subheader","action","startIcon","MenuBook","ingredients","getRecipeDetailEditPath","Edit","Typography","style","whiteSpace","description","RECIPES_PATH","RecipePage","history","exact","path","render","RECIPE_DETAILS_PATH","listItemsCache","ListForm","onCompleted","setValue","window","localStorage","getItem","setTimeout","setItem","clearTimeout","required","Save","ClearListDialog","onClearList","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","DialogTitle","DialogActions","clear","autoFocus","CardList","items","onSelect","isChecked","headline","item","Checkbox","checked","ListPage","setList","fetchList","useListItems","alignContent","justifyContent","mb","Drawer","anchor","ImportRecipes","event","reader","FileReader","onload","JSON","parse","readAsText","files","Snackbar","autoHideDuration","message","anchorOrigin","vertical","horizontal","ExportRecipes","href","updateHref","getData","data","encodeURIComponent","stringify","download","SettingsPage","CardActions","marginTop","nav","top","BottomNav","location","pathname","AppBar","BottomNavigation","showLabels","BottomNavigationAction","icon","FormatListBulleted","Settings","RootRoutes","from","to","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","palette","main","ThemeProvider","CssBaseline","Container","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ada88962.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Fab, Theme } from \"@material-ui/core\";\n\nconst fabStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      position: \"fixed\",\n      bottom: theme.spacing(8),\n\n      right: theme.spacing(2)\n    }\n  })\n);\n\nexport const BottomRightFab: React.FC<{\n  onClick: (e: any) => void;\n  label: string;\n}> = ({ onClick, label, children }) => {\n  const styles = fabStyles();\n  return (\n    <Fab\n      onClick={onClick}\n      className={styles.fab}\n      color=\"primary\"\n      aria-label={label}\n    >\n      {children}\n    </Fab>\n  );\n};\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Clear from \"@material-ui/icons/Clear\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1\n    },\n    iconButton: {\n      padding: 10\n    },\n    divider: {\n      height: 28,\n      margin: 4\n    }\n  })\n);\n\nexport const SearchInput: React.FC<{\n  onSubmit(query: string): void;\n  label: string;\n}> = ({ onSubmit, label }) => {\n  const classes = useStyles();\n  const [query, setQuery] = React.useState(\"\");\n  const reset = () => {\n    setQuery(\"\");\n    onSubmit(\"\");\n  };\n  return (\n    <Paper\n      onSubmit={e => {\n        e.preventDefault();\n        onSubmit(query);\n      }}\n      component=\"form\"\n      className={classes.root}\n    >\n      <InputBase\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n        className={classes.input}\n        placeholder={label}\n        inputProps={{ \"aria-label\": label }}\n      />\n      <IconButton\n        type=\"button\"\n        color=\"secondary\"\n        className={classes.iconButton}\n        aria-label=\"Suche löschen\"\n        onClick={reset}\n      >\n        <Clear />\n      </IconButton>\n      <Divider className={classes.divider} orientation=\"vertical\" />\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"suchen\"\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n};\n","import Dexie from \"dexie\";\n\nexport interface ListItem {\n  title: string;\n}\n\nexport interface Recipe {\n  title: string;\n  tags: string;\n  ingredients: string;\n  description: string;\n}\n\nexport const DEFAULT_PAGE_SIZE = 50;\n\nexport class ListDb extends Dexie {\n  listItems: Dexie.Table<ListItem, string>;\n  basketItems: Dexie.Table<ListItem, string>;\n  recipes: Dexie.Table<Recipe, string>;\n  constructor() {\n    super(\"recipes-db-1\");\n    this.version(1).stores({\n      basketItems: \"title\",\n      listItems: \"title\",\n      recipes: \"title,tags\"\n    });\n    this.listItems = this.table(\"listItems\");\n    this.basketItems = this.table(\"basketItems\");\n    this.recipes = this.table(\"recipes\");\n  }\n}\n\nconst db = new ListDb();\n\nexport const getRecipeByName = async (title: string) => {\n  const [recipe] = await db.recipes\n    .where(\"title\")\n    .equals(title)\n    .toArray();\n\n  return recipe;\n};\n\nexport const getRecipes = () => {\n  return db.recipes.toArray();\n};\n\nexport const getPagedRecipes = (offset = 0) => {\n  return db.recipes\n    .offset(offset)\n    .limit(DEFAULT_PAGE_SIZE)\n    .toArray();\n};\n\nexport const queryPagedRecipes = (query = \"\") => {\n  return db.recipes\n    .where(\"title\")\n    .startsWithIgnoreCase(query)\n    .or(\"tags\")\n    .startsWithIgnoreCase(query)\n    .limit(200)\n    .toArray();\n};\n\nexport const getRecipesCount = () => {\n  return db.recipes.count();\n};\nexport const addRecipe = (recipe: Recipe) => {\n  return db.recipes.add(recipe);\n};\nexport const updateRecipe = (recipe: Recipe) => {\n  return db.recipes.put(recipe);\n};\nexport const deleteRecipe = (title: string) => {\n  return db.recipes.delete(title);\n};\nexport const bulkAddRecipes = (recipes: Recipe[]) => {\n  return db.recipes.bulkPut(recipes);\n};\nexport const getRecipesForExport = () => {\n  return db.recipes.toArray();\n};\n\nexport const getList = async () => {\n  const basket = await db.basketItems.toArray();\n  const list = await db.listItems.toArray();\n  return { basket, list };\n};\n\nexport const addListItem = (listItem: ListItem) => {\n  return db.listItems.add(listItem);\n};\n\nexport const checkListItem = async (listItem: ListItem) => {\n  db.basketItems.add(listItem);\n  db.listItems.delete(listItem.title);\n};\n\nexport const unCheckListItem = async (listItem: ListItem) => {\n  db.basketItems.delete(listItem.title);\n  db.listItems.add(listItem);\n};\n\nexport const addListItems = (listItems: string) => {\n  return db.listItems.bulkPut(\n    listItems.split(\"\\n\").map(title => ({\n      title,\n      inBasket: false\n    }))\n  );\n};\n\nexport const clearList = () => {\n  return db.basketItems.clear();\n};\n","import React from \"react\";\n\nimport {\n  Recipe,\n  getRecipeByName,\n  getPagedRecipes,\n  getRecipesCount,\n  DEFAULT_PAGE_SIZE,\n  queryPagedRecipes\n} from \"../db\";\n\nexport type Status<T = \"success\"> = \"\" | \"pending\" | \"error\" | T;\n\nconst recipeTitleCache: Record<string, Recipe> = {};\nlet recipeListCache: Recipe[] = [];\n\nexport const useRecipeByTitle = (title: string) => {\n  const [status, setStatus] = React.useState<Status<Recipe>>(\n    recipeTitleCache[title] || \"\"\n  );\n\n  const updateCache = (recipe: Recipe) => {\n    recipeTitleCache[recipe.title] = recipe;\n  };\n\n  const fetchRecipe = async (title: string) => {\n    try {\n      if (recipeTitleCache[title]) {\n        setStatus(recipeTitleCache[title]);\n        return;\n      }\n      setStatus(\"pending\");\n      const result = await getRecipeByName(title);\n      setStatus(result);\n      recipeTitleCache[title] = result;\n    } catch {\n      setStatus(\"error\");\n    }\n  };\n  React.useEffect(() => {\n    fetchRecipe(title);\n  }, [title]);\n\n  return {\n    status,\n    retry: fetchRecipe,\n    updateCache\n  };\n};\n\nexport const useRecipes = () => {\n  const status = \"\";\n  const [recipes, setRecipes] = React.useState<Recipe[]>([]);\n  const [hasMore, setHasMore] = React.useState(false);\n  const offsetRef = React.useRef(0);\n\n  const checkHasMore = async () => {\n    const count = await getRecipesCount();\n    setHasMore(count !== recipeListCache.length);\n  };\n\n  const fetchRecipes = async () => {\n    try {\n      const result = await getPagedRecipes(offsetRef.current);\n\n      if (result.length) {\n        offsetRef.current += DEFAULT_PAGE_SIZE;\n        recipeListCache = [...recipes, ...result];\n        setRecipes(recipeListCache);\n        checkHasMore();\n      } else {\n        setHasMore(false);\n      }\n    } catch {}\n  };\n\n  const queryRecipes = async (query = \"\") => {\n    try {\n      if (query) {\n        const result = await queryPagedRecipes(query);\n        setRecipes(result);\n        setHasMore(false);\n      } else {\n        setRecipes(recipeListCache);\n        checkHasMore();\n      }\n    } catch {}\n  };\n\n  return {\n    status,\n    hasMore,\n    recipes,\n    fetchRecipes,\n    queryRecipes\n  };\n};\n","import React from \"react\";\n\n// @ts-ignore\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Delete } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { Form, Field } from \"react-final-form\";\n\nimport { BottomRightFab } from \"../common\";\nimport { Recipe, addRecipe, updateRecipe, deleteRecipe } from \"../db\";\nimport { useRecipeByTitle } from \"./recipe-hooks\";\nimport { getRecipeDetailPath } from \".\";\n\nimport { RECIPES_PATH } from \"../routes-config\";\n\nconst validateRequired = (value: string) => (value ? undefined : \"required\");\n\nconst addUpdateRecipe = async (recipe: Recipe, isUpdate: boolean) => {\n  if (isUpdate) {\n    await updateRecipe(recipe);\n  } else {\n    await addRecipe(recipe);\n  }\n\n  return recipe;\n};\n\nexport const RecipeForm: React.FC<{\n  onComplete: (recipe: Recipe) => void;\n  recipe?: Recipe;\n}> = ({ onComplete, recipe }) => {\n  return (\n    <Card>\n      <CardHeader title=\"Neues Rezept\" />\n      <CardContent>\n        <Form<Recipe>\n          initialValues={recipe}\n          onSubmit={value => addUpdateRecipe(value, Boolean(recipe))}\n        >\n          {({ handleSubmit, submitting, invalid, form }) => (\n            <form\n              autoComplete=\"off\"\n              onSubmit={async e => {\n                const recipe = await handleSubmit(e);\n                if (recipe) {\n                  form.reset();\n                  onComplete(recipe as Recipe);\n                }\n              }}\n            >\n              <Field name=\"title\" validate={validateRequired}>\n                {props => (\n                  <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    error={props.meta.touched && props.meta.error}\n                    label=\"Rezept Titel\"\n                    {...props.input}\n                  />\n                )}\n              </Field>\n              <Field name=\"tags\">\n                {props => (\n                  <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Tags\"\n                    name=\"tags\"\n                    {...props.input}\n                  />\n                )}\n              </Field>\n\n              <Field name=\"ingredients\" validate={validateRequired}>\n                {props => (\n                  <Box mt={2}>\n                    <TextField\n                      margin=\"normal\"\n                      multiline\n                      fullWidth\n                      error={props.meta.touched && props.meta.error}\n                      label=\"Zutaten\"\n                      {...props.input}\n                    />\n                  </Box>\n                )}\n              </Field>\n\n              <Field name=\"description\" validate={validateRequired}>\n                {props => (\n                  <Box mt={2}>\n                    <TextField\n                      margin=\"normal\"\n                      multiline\n                      fullWidth\n                      error={props.meta.touched && props.meta.error}\n                      label=\"Zubereitung\"\n                      {...props.input}\n                    />\n                  </Box>\n                )}\n              </Field>\n\n              <Box mt={2}>\n                <Button\n                  disabled={invalid || submitting}\n                  color=\"primary\"\n                  type=\"submit\"\n                >\n                  {recipe\n                    ? `änderung an ${recipe.title} speichern`\n                    : \"neues Rezept speichern\"}\n                </Button>\n              </Box>\n            </form>\n          )}\n        </Form>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const RecipeEditForm: React.FC = () => {\n  const navigate = useHistory();\n  const { id } = useParams();\n  const title = decodeURIComponent(id || \"\");\n  const { status, updateCache } = useRecipeByTitle(title);\n\n  if (status === \"\" || status === \"pending\" || status === \"error\") {\n    return <Skeleton height=\"12rem\" />;\n  }\n\n  return (\n    <>\n      <RecipeForm\n        onComplete={recipe => {\n          updateCache(recipe);\n          navigate.push(getRecipeDetailPath(recipe.title));\n        }}\n        recipe={status}\n      />\n\n      <BottomRightFab\n        label=\"Rezept löschen\"\n        onClick={async () => {\n          try {\n            await deleteRecipe(status.title);\n            navigate.push(RECIPES_PATH);\n          } catch (e) {\n            console.log(e);\n          }\n        }}\n      >\n        <Delete />\n      </BottomRightFab>\n    </>\n  );\n};\n","export const BASE_PATH = \"\";\nexport const RECIPES_PATH = BASE_PATH + \"/rezepte\";\nexport const LIST_PATH = BASE_PATH + \"/einkaufliste\";\nexport const SETTINGS_PATH = BASE_PATH + \"/einstellungen\";\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport { Skeleton } from \"@material-ui/lab\";\nimport { Add } from \"@material-ui/icons\";\nimport { List, ListItem, ListItemText, Button, Box } from \"@material-ui/core\";\n\nimport { SearchInput, BottomRightFab } from \"../common\";\nimport { getRecipeDetailPath, ADD_RECIPE_PATH } from \".\";\nimport { useRecipes } from \"./recipe-hooks\";\n\nexport const ListLoader: React.FC = () => {\n  return (\n    <>\n      <Skeleton height=\"4rem\" />\n      <Skeleton height=\"4rem\" />\n    </>\n  );\n};\n\nexport const RecipeList = () => {\n  const { recipes, status, fetchRecipes, queryRecipes, hasMore } = useRecipes();\n  const navigate = useHistory();\n\n  React.useEffect(() => {\n    fetchRecipes();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <SearchInput label=\"Rezepte suchen\" onSubmit={queryRecipes} />\n      <List>\n        {recipes.map(recipe => (\n          <ListItem\n            button\n            onClick={() => navigate.push(getRecipeDetailPath(recipe.title))}\n            key={recipe.title}\n          >\n            <ListItemText primary={recipe.title} secondary={recipe.tags} />\n          </ListItem>\n        ))}\n      </List>\n      {hasMore && <Button onClick={fetchRecipes}>Load more</Button>}\n\n      {status === \"error\" && (\n        <Box>\n          rezpete konnten nicht geladen werden{\" \"}\n          <Button onClick={fetchRecipes}>nochmal versuchen</Button>\n        </Box>\n      )}\n      <BottomRightFab\n        onClick={() => navigate.push(ADD_RECIPE_PATH)}\n        label=\"Rezept hinzufügen\"\n        children={<Add />}\n      />\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Edit, MenuBook } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Typography,\n  CardContent,\n  Button\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nimport { BottomRightFab } from \"../common\";\nimport { addListItems } from \"../db\";\nimport { useRecipeByTitle } from \"./recipe-hooks\";\nimport { getRecipeDetailEditPath } from \".\";\n\nimport { LIST_PATH } from \"../routes-config\";\n\nexport const RecipeDetails: React.FC = () => {\n  const navigate = useHistory();\n  const { id } = useParams();\n  const title = decodeURIComponent(id || \"\");\n  const { status } = useRecipeByTitle(title);\n\n  if (status === \"\" || status === \"pending\") {\n    return <Skeleton height=\"12rem\" />;\n  }\n\n  if (status === \"error\") {\n    return <Box>rezpete konnten nicht geladen werden</Box>;\n  }\n\n  return (\n    <Box mt={3}>\n      <Card>\n        <CardHeader\n          title={status.title}\n          subheader={status.tags}\n          action={\n            <Button\n              startIcon={<MenuBook />}\n              onClick={async () => {\n                await addListItems(status.ingredients);\n                navigate.push(LIST_PATH);\n              }}\n            >\n              zur Einkaufsliste\n            </Button>\n          }\n        ></CardHeader>\n      </Card>\n      <BottomRightFab\n        onClick={() => navigate.push(getRecipeDetailEditPath(status.title))}\n        label=\"Rezept bearbeiten\"\n        children={<Edit />}\n      />\n      <Box mt={3}>\n        <Card>\n          <CardHeader subheader=\"Zutaten\"></CardHeader>\n          <CardContent>\n            <Typography style={{ whiteSpace: \"pre-wrap\" }}>\n              {status.ingredients}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Box>\n      <Box mt={3}>\n        <Card>\n          <CardHeader subheader=\"Zubereitung\"></CardHeader>\n          <CardContent>\n            <Typography style={{ whiteSpace: \"pre-wrap\" }}>\n              {status.description}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\n\nimport { RecipeForm, RecipeEditForm } from \"./recipe-form\";\nimport { RecipeList } from \"./recipe-list\";\nimport { RecipeDetails } from \"./recipe-details\";\n\nimport { RECIPES_PATH } from \"../routes-config\";\n\nexport const ADD_RECIPE_PATH = RECIPES_PATH + \"/neues-rezept\";\nexport const RECIPE_DETAILS_PATH = RECIPES_PATH + \"/:id\";\nexport const RECIPE_DETAILS_EDIT_PATH = RECIPE_DETAILS_PATH + \"/bearbeiten\";\n\nexport const getRecipeDetailPath = (title: string) =>\n  RECIPES_PATH + \"/\" + title;\nexport const getRecipeDetailEditPath = (title: string) =>\n  getRecipeDetailPath(title) + \"/bearbeiten\";\n\nexport const RecipePage = () => {\n  const history = useHistory();\n\n  return (\n    <Switch>\n      <Route exact path={RECIPES_PATH} component={RecipeList} />\n      <Route\n        path={ADD_RECIPE_PATH}\n        render={() => (\n          <RecipeForm\n            onComplete={recipe => {\n              history.push(getRecipeDetailPath(recipe.title));\n            }}\n          />\n        )}\n      />\n      <Route exact path={RECIPE_DETAILS_PATH} component={RecipeDetails} />\n      <Route path={RECIPE_DETAILS_EDIT_PATH} component={RecipeEditForm} />\n    </Switch>\n  );\n};\n","import React from \"react\";\n\nimport { ListItem, getList } from \"../db\";\n\nlet listItemsCache: {\n  list: ListItem[];\n  basket: ListItem[];\n} = { list: [], basket: [] };\n\nexport const useListItems = () => {\n  const [list, setList] = React.useState<{\n    list: ListItem[];\n    basket: ListItem[];\n  }>(listItemsCache);\n\n  const fetchList = async () => {\n    try {\n      const result = await getList();\n      listItemsCache = result;\n      setList(result);\n    } catch {}\n  };\n\n  return {\n    list,\n    fetchList\n  };\n};\n","import React from \"react\";\n\n// @ts-ignore\nimport { Save } from \"@material-ui/icons\";\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\n\nimport { addListItems } from \"../db\";\nconst key = \"shoppingList\";\nexport const ListForm: React.FC<{ onCompleted(): void }> = ({\n  onCompleted,\n}) => {\n  const [value, setValue] = React.useState(\"\");\n  React.useEffect(() => {\n    const list = window.localStorage.getItem(key) || \"\";\n    if (typeof list === \"string\") {\n      setValue(list);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const id = setTimeout(() => {\n      window.localStorage.setItem(key, value);\n    }, 100);\n    return () => {\n      clearTimeout(id);\n    };\n  }, [value]);\n\n  return (\n    <Box>\n      <Card>\n        <CardHeader title=\"Einkaufsliste erweitern\" />\n        <CardContent>\n          <form\n            onSubmit={async (e) => {\n              e.preventDefault();\n              try {\n                await addListItems(value);\n                setValue(\"\");\n                onCompleted();\n              } catch (e) {\n                console.log(e);\n              }\n            }}\n          >\n            <TextField\n              value={value}\n              onChange={(e) => setValue(e.target.value)}\n              multiline\n              fullWidth\n              name=\"listItems\"\n              label=\"Einkaufsliste\"\n              required\n            />\n            <Button type=\"submit\" startIcon={<Save />}>\n              speichern\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { useListItems } from \"./list-hooks\";\nimport {\n  ListItem,\n  ListItemText,\n  Drawer,\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  Checkbox,\n  CardHeader,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\n\nimport { BottomRightFab } from \"../common\";\n\nimport { ListForm } from \"./list-form\";\nimport {\n  clearList,\n  checkListItem,\n  unCheckListItem,\n  ListItem as ListItemType,\n} from \"../db\";\n\nconst ClearListDialog: React.FC<{ onClearList(): void }> = ({\n  onClearList,\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n\n  return (\n    <>\n      <Button onClick={handleOpen}>Liste löschen</Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"clear-list-dialog-title\"\n      >\n        <DialogTitle id=\"clear-list-dialog-title\">\n          Die Einkaufsliste leeren ?\n        </DialogTitle>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            nein\n          </Button>\n          <Button\n            onClick={async () => {\n              try {\n                await clearList();\n                onClearList();\n                handleClose();\n              } catch (e) {\n                console.log(e);\n              }\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            ja\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst CardList: React.FC<{\n  items: ListItemType[];\n  onSelect(item: ListItemType): void;\n  isChecked: boolean;\n  headline: string;\n}> = ({ items, onSelect, isChecked, headline }) => {\n  if (items.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader subheader={headline}></CardHeader>\n      <CardContent>\n        {items.map((item) => (\n          <ListItem\n            button\n            onClick={() => {\n              onSelect(item);\n            }}\n            key={item.title}\n          >\n            <ListItemText>{item.title}</ListItemText>\n            <Checkbox\n              checked={isChecked}\n              inputProps={{\n                \"aria-label\": `${item.title} ist im Einkaufswagen`,\n              }}\n            />\n          </ListItem>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const ListPage = () => {\n  const { list, fetchList } = useListItems();\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    fetchList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {list.list.length === 0 && list.basket.length === 0 && (\n        <Box display=\"flex\" alignContent=\"center\" justifyContent=\"center\">\n          Du hast noch nichts auf der Einkaufsliste\n        </Box>\n      )}\n      <CardList\n        items={list.list}\n        isChecked={false}\n        headline=\"In den Einkaufswagen\"\n        onSelect={async (item) => {\n          await checkListItem(item);\n          fetchList();\n        }}\n      />\n      <Box mt={3} mb={3}></Box>\n      <CardList\n        items={list.basket}\n        isChecked={true}\n        headline=\"Schon dabei\"\n        onSelect={async (item) => {\n          await unCheckListItem(item);\n          fetchList();\n        }}\n      />\n\n      {list.basket.length > 0 && (\n        <Box mt={4}>\n          <ClearListDialog onClearList={fetchList} />\n        </Box>\n      )}\n      <Drawer anchor=\"top\" open={open} onClose={() => setOpen(false)}>\n        <ListForm\n          onCompleted={() => {\n            setOpen(false);\n            fetchList();\n          }}\n        />\n      </Drawer>\n      <BottomRightFab onClick={() => setOpen(true)} label=\"brauche sachen\">\n        <Add></Add>\n      </BottomRightFab>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { Button, Snackbar } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nimport { getRecipesForExport, bulkAddRecipes, Recipe } from \"../db\";\n\nexport const ImportRecipes = () => {\n  const [recipes, setRecipes] = React.useState<Recipe[] | null>(null);\n  const [status, setStatus] = React.useState<\"pending\" | \"error\" | \"success\">();\n  const handleImportRecipes = (event: any) => {\n    const onReaderLoad = (event: any) => {\n      const recipes = JSON.parse(event.target.result);\n      setRecipes(recipes);\n    };\n\n    const reader = new FileReader();\n    reader.onload = onReaderLoad;\n    reader.readAsText(event.target.files[0]);\n  };\n\n  return (\n    <>\n      <input type=\"file\" onChange={handleImportRecipes} />\n      <Button\n        onClick={async () => {\n          setStatus(\"pending\");\n          try {\n            await bulkAddRecipes(recipes || []);\n            setStatus(\"success\");\n          } catch {\n            setStatus(\"error\");\n          }\n        }}\n        disabled={recipes === null || status === \"pending\"}\n      >\n        importieren\n      </Button>\n      <Snackbar\n        autoHideDuration={4000}\n        open={status === \"error\"}\n        onClose={() => setStatus(undefined)}\n        message=\"Oh nein der import hat leider nicht geklappt\"\n      ></Snackbar>\n      <Snackbar\n        autoHideDuration={4000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        open={status === \"success\"}\n        onClose={() => setStatus(undefined)}\n        message={`Import erfolgreich ${recipes?.length ||\n          0} Rezepte hinzugefügt oder\n        aktualisiert`}\n      ></Snackbar>\n    </>\n  );\n};\n\nexport const ExportRecipes = () => {\n  const [href, updateHref] = React.useState(\"\");\n\n  const getData = async () => {\n    const recipes = await getRecipesForExport();\n    const data =\n      \"data:text/json;charset=utf-8,\" +\n      encodeURIComponent(JSON.stringify(recipes));\n    updateHref(data);\n  };\n\n  React.useEffect(() => {\n    getData();\n  }, []);\n\n  if (!href) {\n    return <Skeleton></Skeleton>;\n  }\n\n  return (\n    <Button download=\"recipes\" href={href}>\n      exportieren\n    </Button>\n  );\n};\n","import React from \"react\";\n\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions\n} from \"@material-ui/core\";\nimport { ExportRecipes, ImportRecipes } from \"./import-export\";\n\nexport const SettingsPage = () => {\n  return (\n    <Box>\n      <Card>\n        <CardHeader title=\"Rezepte exportieren\"></CardHeader>\n        <CardActions>\n          <ExportRecipes />\n        </CardActions>\n      </Card>\n      <Card style={{ marginTop: \"1rem\" }}>\n        <CardHeader title=\"Rezepte importieren\"></CardHeader>\n        <CardContent>\n          <ImportRecipes />\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n","import React from \"react\";\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory\n} from \"react-router-dom\";\n\nimport { RecipePage } from \"./recipe\";\nimport { ListPage } from \"./list\";\nimport { SettingsPage } from \"./settings\";\n\nimport { FormatListBulleted, MenuBook, Settings } from \"@material-ui/icons\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  AppBar,\n  BottomNavigation,\n  BottomNavigationAction\n} from \"@material-ui/core\";\nimport { RECIPES_PATH, LIST_PATH, SETTINGS_PATH } from \"./routes-config\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    nav: {\n      marginTop: theme.spacing(8),\n      bottom: 0,\n      top: \"auto\"\n    }\n  })\n);\n\nconst BottomNav = () => {\n  const navigate = useHistory();\n  const styles = useStyles();\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [_1, value] = navigate.location.pathname.split(\"/\");\n\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={styles.nav}>\n      <BottomNavigation value={value} showLabels>\n        <BottomNavigationAction\n          onClick={() => navigate.push(RECIPES_PATH)}\n          value=\"rezepte\"\n          label=\"Rezepte\"\n          icon={<FormatListBulleted />}\n        />\n        <BottomNavigationAction\n          onClick={() => navigate.push(LIST_PATH)}\n          value=\"einkaufliste\"\n          label=\"Liste\"\n          icon={<MenuBook />}\n        />\n        <BottomNavigationAction\n          onClick={() => navigate.push(SETTINGS_PATH)}\n          value=\"einstellungen\"\n          label=\"Einstellungen\"\n          icon={<Settings />}\n        />\n      </BottomNavigation>\n    </AppBar>\n  );\n};\n\nexport const RootRoutes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path={RECIPES_PATH} component={RecipePage} />\n        <Route path={LIST_PATH} component={ListPage} />\n        <Route path={SETTINGS_PATH} component={SettingsPage} />\n        <Redirect from=\"/\" to={RECIPES_PATH} />\n      </Switch>\n      <BottomNav />\n    </Router>\n  );\n};\n","import React from \"react\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { Container, Box } from \"@material-ui/core\";\nimport { RootRoutes } from \"./routes\";\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          primary: {\n            main: \"#00acc1\"\n          },\n          secondary: {\n            main: \"#00bfa5\"\n          },\n          type: prefersDarkMode ? \"dark\" : \"light\"\n        }\n      }),\n    [prefersDarkMode]\n  );\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <Container>\n        <Box mt={2} mb={8}>\n          <RootRoutes />\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}